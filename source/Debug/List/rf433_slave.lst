
AVRASM ver. 2.1.30  E:\Project\RF433\source\Debug\List\rf433_slave.asm Sun May 15 09:35:24 2022

E:\Project\RF433\source\Debug\List\rf433_slave.asm(1086): warning: Register r5 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega8A
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : float, width, precision
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega8A
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	RCALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _lcd=R5
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 c09b      	RJMP __RESET
000001 cffe      	RJMP 0x00
000002 cffd      	RJMP 0x00
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 cff9      	RJMP 0x00
000007 cff8      	RJMP 0x00
000008 cff7      	RJMP 0x00
000009 cff6      	RJMP 0x00
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 c126      	RJMP _twi_int_handler
000012 cfed      	RJMP 0x00
                 
                 _conv_delay_G103:
000013 0064
000014 00c8
000015 0190
000016 0320      	.DB  0x64,0x0,0xC8,0x0,0x90,0x1,0x20,0x3
                 _bit_mask_G103:
000017 fff8
000018 fffc
000019 fffe
00001a ffff      	.DB  0xF8,0xFF,0xFC,0xFF,0xFE,0xFF,0xFF,0xFF
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
00001b 0000      	.DW  0x0000
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
E:\Project\RF433\source\Debug\List\rf433_slave.asm(1126): warning: .cseg .db misalignment - padding zero byte
00001c 0000      	.DB  0x0
                 
                 _0x0:
00001d 434c
00001e 2044
00001f 3249
000020 2043      	.DB  0x4C,0x43,0x44,0x20,0x49,0x32,0x43,0x20
000021 4e49
000022 5449
000023 2d2d
000024 002d      	.DB  0x49,0x4E,0x49,0x54,0x2D,0x2D,0x2D,0x0
000025 6175
000026 7472
000027 003a
000028 6625      	.DB  0x75,0x61,0x72,0x74,0x3A,0x0,0x25,0x66
000029 0a0d
E:\Project\RF433\source\Debug\List\rf433_slave.asm(1132): warning: .cseg .db misalignment - padding zero byte
00002a 0000      	.DB  0xD,0xA,0x0
                 _0x20000:
00002b 3249
00002c 2043
00002d 4e49
00002e 5449      	.DB  0x49,0x32,0x43,0x20,0x49,0x4E,0x49,0x54
00002f 003a
000030 7453
000031 7261
000032 2074      	.DB  0x3A,0x0,0x53,0x74,0x61,0x72,0x74,0x20
000033 7845
000034 2e65
000035 4100
000036 4b43      	.DB  0x45,0x78,0x65,0x2E,0x0,0x41,0x43,0x4B
000037 5220
000038 6365
000039 6965
00003a 6576      	.DB  0x20,0x52,0x65,0x63,0x65,0x69,0x76,0x65
00003b 2064
00003c 6f66
00003d 2072
00003e 544d      	.DB  0x64,0x20,0x66,0x6F,0x72,0x20,0x4D,0x54
00003f 5320
000040 414c
000041 4100
000042 4b43      	.DB  0x20,0x53,0x4C,0x41,0x0,0x41,0x43,0x4B
000043 5220
000044 6365
000045 6965
000046 6576      	.DB  0x20,0x52,0x65,0x63,0x65,0x69,0x76,0x65
000047 2064
000048 6f66
000049 2072
00004a 544d      	.DB  0x64,0x20,0x66,0x6F,0x72,0x20,0x4D,0x54
00004b 4420
00004c 7461
00004d 2061
00004e 7774      	.DB  0x20,0x44,0x61,0x74,0x61,0x20,0x74,0x77
00004f 5f69
000050 7277
000051 7469
000052 5f65      	.DB  0x69,0x5F,0x77,0x72,0x69,0x74,0x65,0x5F
000053 7764
000054 2072
000055 5200
000056 6365      	.DB  0x64,0x77,0x72,0x20,0x0,0x52,0x65,0x63
000057 6965
000058 6976
000059 676e
00005a 4d20      	.DB  0x65,0x69,0x76,0x69,0x6E,0x67,0x20,0x4D
00005b 2052
00005c 6164
00005d 6174
00005e 4120      	.DB  0x52,0x20,0x64,0x61,0x74,0x61,0x20,0x41
00005f 4b43
000060 0020
000061 6552
000062 6563      	.DB  0x43,0x4B,0x20,0x0,0x52,0x65,0x63,0x65
000063 7669
000064 6e69
000065 2067
000066 524d      	.DB  0x69,0x76,0x69,0x6E,0x67,0x20,0x4D,0x52
000067 4420
000068 7461
000069 2061
00006a 414e      	.DB  0x20,0x44,0x61,0x74,0x61,0x20,0x4E,0x41
00006b 4b43
E:\Project\RF433\source\Debug\List\rf433_slave.asm(1150): warning: .cseg .db misalignment - padding zero byte
00006c 0000      	.DB  0x43,0x4B,0x0
                 _0x2000003:
E:\Project\RF433\source\Debug\List\rf433_slave.asm(1152): warning: .cseg .db misalignment - padding zero byte
00006d 0007      	.DB  0x7
                 _0x2040000:
00006e 4e2d
00006f 4e41
E:\Project\RF433\source\Debug\List\rf433_slave.asm(1154): warning: .cseg .db misalignment - padding zero byte
000070 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x20A0060:
E:\Project\RF433\source\Debug\List\rf433_slave.asm(1156): warning: .cseg .db misalignment - padding zero byte
000071 0001      	.DB  0x1
                 _0x20A0000:
000072 4e2d
000073 4e41
000074 4900
000075 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
E:\Project\RF433\source\Debug\List\rf433_slave.asm(1159): warning: .cseg .db misalignment - padding zero byte
000076 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000077 0001      	.DW  0x01
000078 0002      	.DW  0x02
000079 0036      	.DW  __REG_BIT_VARS*2
                 
00007a 0001      	.DW  0x01
00007b 0005      	.DW  0x05
00007c 0038      	.DW  __REG_VARS*2
                 
00007d 0010      	.DW  0x10
00007e 0160      	.DW  _0x6
00007f 003a      	.DW  _0x0*2
                 
000080 0006      	.DW  0x06
000081 0170      	.DW  _0xB
000082 004a      	.DW  _0x0*2+16
                 
000083 000a      	.DW  0x0A
000084 0176      	.DW  _0x20003
000085 0056      	.DW  _0x20000*2
                 
000086 000b      	.DW  0x0B
000087 0180      	.DW  _0x2000B
000088 0060      	.DW  _0x20000*2+10
                 
000089 0018      	.DW  0x18
00008a 018b      	.DW  _0x20010
00008b 006b      	.DW  _0x20000*2+21
                 
00008c 0028      	.DW  0x28
00008d 01a3      	.DW  _0x20015
00008e 0083      	.DW  _0x20000*2+45
                 
00008f 0017      	.DW  0x17
000090 01cb      	.DW  _0x2001D
000091 00ab      	.DW  _0x20000*2+85
                 
000092 0017      	.DW  0x17
000093 01e2      	.DW  _0x20021
000094 00c2      	.DW  _0x20000*2+108
                 
000095 0001      	.DW  0x01
000096 01fb      	.DW  _twi_result
000097 00da      	.DW  _0x2000003*2
                 
000098 0001      	.DW  0x01
000099 0215      	.DW  __seed_G105
00009a 00e2      	.DW  _0x20A0060*2
                 
                 _0xFFFFFFFF:
00009b 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00009c 94f8      	CLI
00009d 27ee      	CLR  R30
00009e bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00009f e0f1      	LDI  R31,1
0000a0 bffb      	OUT  GICR,R31
0000a1 bfeb      	OUT  GICR,R30
0000a2 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
0000a3 e08d      	LDI  R24,(14-2)+1
0000a4 e0a2      	LDI  R26,2
0000a5 27bb      	CLR  R27
                 __CLEAR_REG:
0000a6 93ed      	ST   X+,R30
0000a7 958a      	DEC  R24
0000a8 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0000a9 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0000aa e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0000ab e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
0000ac 93ed      	ST   X+,R30
0000ad 9701      	SBIW R24,1
0000ae f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0000af eeee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0000b0 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0000b1 9185      	LPM  R24,Z+
0000b2 9195      	LPM  R25,Z+
0000b3 9700      	SBIW R24,0
0000b4 f061      	BREQ __GLOBAL_INI_END
0000b5 91a5      	LPM  R26,Z+
0000b6 91b5      	LPM  R27,Z+
0000b7 9005      	LPM  R0,Z+
0000b8 9015      	LPM  R1,Z+
0000b9 01bf      	MOVW R22,R30
0000ba 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0000bb 9005      	LPM  R0,Z+
0000bc 920d      	ST   X+,R0
0000bd 9701      	SBIW R24,1
0000be f7e1      	BRNE __GLOBAL_INI_LOOP
0000bf 01fb      	MOVW R30,R22
0000c0 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000c1 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000c2 bfed      	OUT  SPL,R30
0000c3 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000c4 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000c5 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000c6 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000c7 c000      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;/*
                 ; * i2c_lcd.c
                 ; *
                 ; *
                 ; * Author : vigne
                 ; */
                 ;
                 ;//#include <avr/io.h>
                 ;//#include <util/twi.h>			//--- Give Status of I2C Bus will operation
                 ;//#define F_CPU	100000UL
                 ;#include <delay.h>
                 ;#include <mega8.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include "twi_i2c.h"
                 ;#include "twi_lcd.h"
                 
                 	.CSEG
                 ;	x -> Y+0
                 ;	x -> Y+1
                 ;	temp -> R17
                 ;	x -> Y+0
                 ;	x -> Y+0
                 ;	*c -> Y+0
                 ;	c -> Y+6
                 ;	num_integer -> R16,R17
                 ;	tram -> R19
                 ;	chuc -> R18
                 ;	donvi -> R21
                 
                 	.DSEG
                 _0x6:
000160           	.BYTE 0x10
                 ;// 1 Wire Bus interface functions
                 ;#include <1wire.h>
                 ;
                 ;// DS1820 Temperature Sensor functions
                 ;#include <ds18b20.h>
                 ;#include <stdio.h>
                 ;
                 ;float temp =0;
                 ;
                 ;void main(void)
                 ; 0000 0019 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 001A     // Port C initialization
                 ; 0000 001B //// Function: Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 001C //DDRC=(0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
                 ; 0000 001D //// State: Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 001E //PORTC=(0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
                 ; 0000 001F 
                 ; 0000 0020     twi_init();                                    //--- TWI Initialize
0000c8 d02a      	RCALL _twi_init
                 ; 0000 0021 //    twi_lcd_init();                                //--- TWI LCD Initialize
                 ; 0000 0022 //    twi_lcd_msg("RF433");                        //--- Send a String to LCD
                 ; 0000 0023     /* Replace with your application code */
                 ; 0000 0024 
                 ; 0000 0025     w1_init();
0000c9 d852      	RCALL _w1_init
                 ; 0000 0026     ds18b20_init(NULL, 0 , 0 ,DS18B20_10BIT_RES )  ;
0000ca e0e0      	LDI  R30,LOW(0)
0000cb e0f0      	LDI  R31,HIGH(0)
0000cc d6db      	RCALL SUBOPT_0x0
0000cd e0e0      	LDI  R30,LOW(0)
0000ce 93ea      	ST   -Y,R30
0000cf 93ea      	ST   -Y,R30
0000d0 e0a1      	LDI  R26,LOW(1)
0000d1 d5f8      	RCALL _ds18b20_init
                 ; 0000 0027     while (1)
                 _0x7:
                 ; 0000 0028     {
                 ; 0000 0029       temp = ds18b20_temperature(NULL)  ;
0000d2 e0a0      	LDI  R26,LOW(0)
0000d3 e0b0      	LDI  R27,0
0000d4 d5be      	RCALL _ds18b20_temperature
0000d5 93e0 0205 	STS  _temp,R30
0000d7 93f0 0206 	STS  _temp+1,R31
0000d9 9360 0207 	STS  _temp+2,R22
0000db 9370 0208 	STS  _temp+3,R23
                 ; 0000 002A 
                 ; 0000 002B 
                 ; 0000 002C  //       printf("Nhiet do: %f\r\n", temp);
                 ; 0000 002D   //     twi_lcd_cmd(0xC0);                        //--- Select 2nd Row
                 ; 0000 002E    //   twi_lcd_msg("nhiet do: 7 *C \r\n");            //--- Send a String to LCD
                 ; 0000 002F //        twi_lcd_num(temp)  ;
                 ; 0000 0030  //        usart_msg("uart:");
                 ; 0000 0031 
                 ; 0000 0032         if(PINB.0 == 0)
0000dd 99b0      	SBIC 0x16,0
0000de c012      	RJMP _0xA
                 ; 0000 0033         {
                 ; 0000 0034 //        twi_lcd_num(temp)
                 ; 0000 0035 //         temp = ds18b20_temperature(NULL)  ;
                 ; 0000 0036          usart_msg("uart:");
                +
0000df e7a0     +LDI R26 , LOW ( _0xB + ( 0 ) )
0000e0 e0b1     +LDI R27 , HIGH ( _0xB + ( 0 ) )
                 	__POINTW2MN _0xB,0
0000e1 d048      	RCALL _usart_msg
                 ; 0000 0037 //            usart_tx('a');
                 ; 0000 0038 //            usart_tx('1');
                 ; 0000 0039 //            usart_tx('4');
                 ; 0000 003A             printf("%f\r\n", temp);
                +
0000e2 e5e0     +LDI R30 , LOW ( 2 * _0x0 + ( 22 ) )
0000e3 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 22 ) )
                 	__POINTW1FN _0x0,22
0000e4 d6c3      	RCALL SUBOPT_0x0
0000e5 91e0 0205 	LDS  R30,_temp
0000e7 91f0 0206 	LDS  R31,_temp+1
0000e9 9160 0207 	LDS  R22,_temp+2
0000eb 9170 0208 	LDS  R23,_temp+3
0000ed daef      	RCALL __PUTPARD1
0000ee e084      	LDI  R24,4
0000ef d548      	RCALL _printf
0000f0 9626      	ADIW R28,6
                 ; 0000 003B         }
                 ; 0000 003C     }
                 _0xA:
0000f1 cfe0      	RJMP _0x7
                 ; 0000 003D }
                 _0xC:
0000f2 cfff      	RJMP _0xC
                 ; .FEND
                 
                 	.DSEG
                 _0xB:
000170           	.BYTE 0x6
                 ;/*
                 ;
                 ;		TWI MAIN FILE
                 ;		twi.c
                 ;*/
                 ;
                 ;#include "twi_i2c.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <mega8.h>
                 ;#include <delay.h>
                 ;#define F_CPU 8000000UL
                 ;
                 ;void twi_init()
                 ; 0001 000D {
                 
                 	.CSEG
                 _twi_init:
                 ; .FSTART _twi_init
                 ; 0001 000E 	DDRC = 0x30;								//--- PORTC Last two bit as Output
0000f3 e3e0      	LDI  R30,LOW(48)
0000f4 bbe4      	OUT  0x14,R30
                 ; 0001 000F 	PORTC = 0x30;
0000f5 bbe5      	OUT  0x15,R30
                 ; 0001 0010 
                 ; 0001 0011 	usart_init();								//--- Usart Initialization
0000f6 d023      	RCALL _usart_init
                 ; 0001 0012 	usart_msg("I2C INIT:");				//--- Send String to Com Port of PC
                +
0000f7 e7a6     +LDI R26 , LOW ( _0x20003 + ( 0 ) )
0000f8 e0b1     +LDI R27 , HIGH ( _0x20003 + ( 0 ) )
                 	__POINTW2MN _0x20003,0
0000f9 d030      	RCALL _usart_msg
                 ; 0001 0013 	usart_tx(0x0d);								//--- Next Line
0000fa e0ad      	LDI  R26,LOW(13)
0000fb d028      	RCALL _usart_tx
                 ; 0001 0014 
                 ; 0001 0015 	TWCR &= ~(1<<TWEN);							//--- Diable TWI
0000fc b7e6      	IN   R30,0x36
0000fd 7feb      	ANDI R30,0xFB
0000fe bfe6      	OUT  0x36,R30
                 ; 0001 0016 	TWBR = BITRATE(TWSR = 0x00);	 			//--- Bit rate with prescaler 4
                +
0000ff e0e0     +LDI R30 , LOW ( 0x40800000 )
000100 e0f0     +LDI R31 , HIGH ( 0x40800000 )
000101 e860     +LDI R22 , BYTE3 ( 0x40800000 )
000102 e470     +LDI R23 , BYTE4 ( 0x40800000 )
                 	__GETD1N 0x40800000
000103 dad9      	RCALL __PUTPARD1
000104 b9e1      	OUT  0x1,R30
000105 d6a5      	RCALL SUBOPT_0x1
000106 d6a9      	RCALL SUBOPT_0x2
000107 d295      	RCALL _pow
                +
000108 e0a0     +LDI R26 , LOW ( 0x40000000 )
000109 e0b0     +LDI R27 , HIGH ( 0x40000000 )
00010a e080     +LDI R24 , BYTE3 ( 0x40000000 )
00010b e490     +LDI R25 , BYTE4 ( 0x40000000 )
                 	__GETD2N 0x40000000
00010c d988      	RCALL __MULF12
                +
00010d e0a0     +LDI R26 , LOW ( 0x41C00000 )
00010e e0b0     +LDI R27 , HIGH ( 0x41C00000 )
00010f ec80     +LDI R24 , BYTE3 ( 0x41C00000 )
000110 e491     +LDI R25 , BYTE4 ( 0x41C00000 )
                 	__GETD2N 0x41C00000
000111 d9d1      	RCALL __DIVF21
000112 d8bf      	RCALL __CFD1U
000113 b9e0      	OUT  0x0,R30
                 ; 0001 0017 	TWCR = (1<<TWEN);							//--- Enable TWI
000114 e0e4      	LDI  R30,LOW(4)
000115 bfe6      	OUT  0x36,R30
                 ; 0001 0018 	delay_us(10);								//--- Delay
                +
000116 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000117 958a     +DEC R24
000118 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
                 ; 0001 0019 }
000119 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x20003:
000176           	.BYTE 0xA
                 ;
                 ;/* Function to Send Start Condition */
                 ;
                 ;void twi_start()
                 ; 0001 001E {
                 
                 	.CSEG
                 ; 0001 001F     char status;
                 ; 0001 0020 	TWCR= (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);		//--- Start Condition as per Datasheet
                 ;	status -> R17
                 ; 0001 0021 	while(!(TWCR & (1<<TWINT)));				//--- Wait till start condition is transmitted to Slave
                 ; 0001 0022     while(!(TWCR&(1<<TWINT)));	                /* Wait until TWI finish its current job */
                 ; 0001 0023     status=TWSR&0xF8;		                    /* Read TWI status register */
                 ; 0001 0024     if(status!=0x10) return ;		            /* Check for repeated start transmitted */
                 ; 0001 0025 
                 ; 0001 0026 	usart_msg("Start Exe.");					//--- Feedback msg to check for error
                 ; 0001 0027 	usart_tx(0x0D);								//--- Next Line
                 ; 0001 0028 }
                 
                 	.DSEG
                 _0x2000B:
000180           	.BYTE 0xB
                 ;
                 ;/* Function to Send Slave Address for Write operation */
                 ;
                 ;void twi_write_cmd(unsigned char address)
                 ; 0001 002D {
                 
                 	.CSEG
                 ; 0001 002E     char status;
                 ; 0001 002F 	TWDR=address;								//--- SLA Address and write instruction
                 ;	address -> Y+1
                 ;	status -> R17
                 ; 0001 0030 	TWCR=(1<<TWINT)|(1<<TWEN);					//--- Clear TWI interrupt flag,Enable TWI
                 ; 0001 0031 	while (!(TWCR & (1<<TWINT)));				//--- Wait till complete TWDR byte transmitted to Slave
                 ; 0001 0032     status=TWSR&0xF8;		    /* Read TWI status register */
                 ; 0001 0033     if(status== 0x28) return ;	/* Check for data transmitted &ack received */
                 ; 0001 0034 
                 ; 0001 0035 	usart_msg("ACK Received for MT SLA");		//--- Feedback msg to check for error
                 ; 0001 0036 	usart_tx(0x0D);								//--- Next Line
                 ; 0001 0037 }
                 
                 	.DSEG
                 _0x20010:
00018b           	.BYTE 0x18
                 ;
                 ;/* Function to Send Data to Slave Device  */
                 ;
                 ;void twi_write_dwr(unsigned char data)
                 ; 0001 003C {
                 
                 	.CSEG
                 ; 0001 003D     char status;
                 ; 0001 003E 	TWDR=data;									//--- Put data in TWDR
                 ;	data -> Y+1
                 ;	status -> R17
                 ; 0001 003F 	TWCR=(1<<TWINT)|(1<<TWEN);					//--- Clear TWI interrupt flag,Enable TWI
                 ; 0001 0040 	while(!(TWCR&(1<<TWINT)));	/* Wait until TWI finish its current job */
                 ; 0001 0041     status=TWSR&0xF8;		    /* Read TWI status register */
                 ; 0001 0042     if(status==0x28) return ;	/* Check for data transmitted &ack received */
                 ; 0001 0043 
                 ; 0001 0044 	usart_msg("ACK Received for MT Data twi_write_dwr ");		//--- Feedback msg to check error
                 ; 0001 0045 	usart_tx(0x0D);								//--- Next Line
                 ; 0001 0046 
                 ; 0001 0047 }
                 
                 	.DSEG
                 _0x20015:
0001a3           	.BYTE 0x28
                 ;
                 ;/* Function to Send Stop Condition */
                 ;
                 ;void twi_stop()
                 ; 0001 004C {
                 
                 	.CSEG
                 ; 0001 004D 	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);		//--- Stop Condition as per Datasheet
                 ; 0001 004E }
                 ;
                 ;/* Function to Send Repeated Start Condition */
                 ;
                 ;
                 ;void twi_repeated_start()
                 ; 0001 0054 {
                 ; 0001 0055     char status;
                 ; 0001 0056 	TWCR= (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);		//--- Repeated Start Condition as per Datasheet
                 ;	status -> R17
                 ; 0001 0057 	while(!(TWCR & (1<<TWINT)));				//--- Wait till restart condition is transmitted to Slave
                 ; 0001 0058 	status=TWSR&0xF8;		/* Read TWI status register */
                 ; 0001 0059     if(status!=0x10)     return ;		/* Check for repeated start transmitted */
                 ; 0001 005A 
                 ; 0001 005B //	usart_msg("Repeated Start Exe.");			//--- Feedback msg to check error
                 ; 0001 005C //	usart_tx(0x0D);								//--- Next Line
                 ; 0001 005D }
                 ;
                 ;
                 ;/* Function to Send Read Acknowledgment */
                 ;
                 ;char twi_read_ack()
                 ; 0001 0063 {
                 ; 0001 0064 	TWCR=(1<<TWEN)|(1<<TWINT)|(1<<TWEA);		//--- Acknowledgment Condition as per Datasheet
                 ; 0001 0065 	while (!(TWCR & (1<<TWINT)));				//--- Wait until Acknowledgment Condition is transmitted to Slave
                 ; 0001 0066 //	while(TW_STATUS != TW_MR_DATA_ACK);			//--- Check for Acknowledgment
                 ; 0001 0067 	usart_msg("Receiving MR data ACK ");		//--- Feedback msg to check error
                 ; 0001 0068 	usart_tx(0x0D);								//--- Next Line
                 ; 0001 0069 	return TWDR;								//--- Return received data from Slave
                 ; 0001 006A }
                 
                 	.DSEG
                 _0x2001D:
0001cb           	.BYTE 0x17
                 ;
                 ;/* Function to Send Read No Acknowledgment */
                 ;
                 ;char twi_read_nack()
                 ; 0001 006F {
                 
                 	.CSEG
                 ; 0001 0070 	TWCR=(1<<TWEN)|(1<<TWINT);					//--- No Acknowledgment Condition as per Datasheet
                 ; 0001 0071 	while (!(TWCR & (1<<TWINT)));				//--- Wait until No Acknowledgment Condition is transmitted to Slave
                 ; 0001 0072 //	while(TW_STATUS != TW_MR_DATA_NACK);		--- Check for Acknowledgment
                 ; 0001 0073 	usart_msg("Receiving MR Data NACK");		//--- Feedback msg to check error
                 ; 0001 0074 	usart_tx(0x0D);								//--- Next Line
                 ; 0001 0075 	return TWDR;								//--- Return received data
                 ; 0001 0076 }
                 
                 	.DSEG
                 _0x20021:
0001e2           	.BYTE 0x17
                 ;
                 ;/* Function to Initialize USART */
                 ;
                 ;void usart_init()
                 ; 0001 007B {
                 
                 	.CSEG
                 _usart_init:
                 ; .FSTART _usart_init
                 ; 0001 007C 	UBRRH = 0;										//--- USART Baud Rate is set to 115200
00011a e0e0      	LDI  R30,LOW(0)
00011b bde0      	OUT  0x20,R30
                 ; 0001 007D 	UBRRL = UBRRL=0x33;//0x08;
00011c e3e3      	LDI  R30,LOW(51)
00011d b9e9      	OUT  0x9,R30
00011e b9e9      	OUT  0x9,R30
                 ; 0001 007E 	UCSRC = (1<<URSEL) | (1<<UCSZ1) | (1<<UCSZ0);	//--- 8-Bit Data Selected
00011f e8e6      	LDI  R30,LOW(134)
000120 bde0      	OUT  0x20,R30
                 ; 0001 007F 	UCSRB = (1<<TXEN) | (1<<RXEN);					//--- Enable TX & RX
000121 e1e8      	LDI  R30,LOW(24)
000122 b9ea      	OUT  0xA,R30
                 ; 0001 0080 }
000123 9508      	RET
                 ; .FEND
                 ;
                 ;/* Function to Transmit data */
                 ;
                 ;void usart_tx(char x)
                 ; 0001 0085 {
                 _usart_tx:
                 ; .FSTART _usart_tx
                 ; 0001 0086 	while (!( UCSRA & (1<<UDRE)));					//--- Check for Buffer is empty
000124 93aa      	ST   -Y,R26
                 ;	x -> Y+0
                 _0x20022:
000125 9b5d      	SBIS 0xB,5
000126 cffe      	RJMP _0x20022
                 ; 0001 0087 	UDR = x;										//--- Send data to USART Buffer
000127 81e8      	LD   R30,Y
000128 b9ec      	OUT  0xC,R30
                 ; 0001 0088 }
000129 c2a8      	RJMP _0x20E0008
                 ; .FEND
                 ;
                 ;/* Function to Receive data */
                 ;
                 ;unsigned char usart_rx()
                 ; 0001 008D {
                 ; 0001 008E 	while(!(UCSRA & (1<<RXC)));						//--- Check for data received completed
                 ; 0001 008F 	return(UDR);									//--- Return the received data
                 ; 0001 0090 }
                 ;
                 ;/* Function to transmit string */
                 ;
                 ;void usart_msg(char *c)
                 ; 0001 0095 {
                 _usart_msg:
                 ; .FSTART _usart_msg
                 ; 0001 0096 	while(*c != '\0')								//--- Check for Null
00012a d688      	RCALL SUBOPT_0x3
                 ;	*c -> Y+0
                 _0x20028:
00012b 81a8      	LD   R26,Y
00012c 81b9      	LDD  R27,Y+1
00012d 91ec      	LD   R30,X
00012e 30e0      	CPI  R30,0
00012f f031      	BREQ _0x2002A
                 ; 0001 0097 	usart_tx(*c++);									//--- Send the String
000130 91ed      	LD   R30,X+
000131 83a8      	ST   Y,R26
000132 83b9      	STD  Y+1,R27
000133 2fae      	MOV  R26,R30
000134 dfef      	RCALL _usart_tx
000135 cff5      	RJMP _0x20028
                 _0x2002A:
                 ; 0001 0098 }
000136 9622      	ADIW R28,2
000137 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;/****** END of Program ******/
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 _twi_int_handler:
                 ; .FSTART _twi_int_handler
000138 920a      	ST   -Y,R0
000139 921a      	ST   -Y,R1
00013a 92fa      	ST   -Y,R15
00013b 936a      	ST   -Y,R22
00013c 937a      	ST   -Y,R23
00013d 938a      	ST   -Y,R24
00013e 939a      	ST   -Y,R25
00013f 93aa      	ST   -Y,R26
000140 93ba      	ST   -Y,R27
000141 93ea      	ST   -Y,R30
000142 93fa      	ST   -Y,R31
000143 b7ef      	IN   R30,SREG
000144 93ea      	ST   -Y,R30
000145 dabd      	RCALL __SAVELOCR6
000146 9110 01fa 	LDS  R17,_twi_rx_index
000148 9100 01f9 	LDS  R16,_twi_tx_index
00014a 9130 020c 	LDS  R19,_bytes_to_tx_G100
00014c 9120 01fb 	LDS  R18,_twi_result
00014e 2fe1      	MOV  R30,R17
00014f 91a0 020d 	LDS  R26,_twi_rx_buffer_G100
000151 91b0 020e 	LDS  R27,_twi_rx_buffer_G100+1
000153 e0f0      	LDI  R31,0
000154 0fea      	ADD  R30,R26
000155 1ffb      	ADC  R31,R27
000156 01af      	MOVW R20,R30
000157 b1e1      	IN   R30,0x1
000158 7fe8      	ANDI R30,LOW(0xF8)
000159 30e8      	CPI  R30,LOW(0x8)
00015a f411      	BRNE _0x2000017
00015b e020      	LDI  R18,LOW(0)
00015c c002      	RJMP _0x2000018
                 _0x2000017:
00015d 31e0      	CPI  R30,LOW(0x10)
00015e f419      	BRNE _0x2000019
                 _0x2000018:
00015f 91e0 0209 	LDS  R30,_slave_address_G100
000161 c010      	RJMP _0x2000067
                 _0x2000019:
000162 31e8      	CPI  R30,LOW(0x18)
000163 f011      	BREQ _0x200001D
000164 32e8      	CPI  R30,LOW(0x28)
000165 f521      	BRNE _0x200001E
                 _0x200001D:
000166 1703      	CP   R16,R19
000167 f480      	BRSH _0x200001F
000168 2fe0      	MOV  R30,R16
000169 5f0f      	SUBI R16,-1
00016a 91a0 020a 	LDS  R26,_twi_tx_buffer_G100
00016c 91b0 020b 	LDS  R27,_twi_tx_buffer_G100+1
00016e e0f0      	LDI  R31,0
00016f 0fae      	ADD  R26,R30
000170 1fbf      	ADC  R27,R31
000171 91ec      	LD   R30,X
                 _0x2000067:
000172 b9e3      	OUT  0x3,R30
000173 b7e6      	IN   R30,0x36
000174 70ef      	ANDI R30,LOW(0xF)
000175 68e0      	ORI  R30,0x80
000176 bfe6      	OUT  0x36,R30
000177 c011      	RJMP _0x2000020
                 _0x200001F:
000178 91e0 020f 	LDS  R30,_bytes_to_rx_G100
00017a 171e      	CP   R17,R30
00017b f460      	BRSH _0x2000021
00017c 91e0 0209 	LDS  R30,_slave_address_G100
00017e 60e1      	ORI  R30,1
00017f 93e0 0209 	STS  _slave_address_G100,R30
000181 94e8      	CLT
000182 f820      	BLD  R2,0
000183 b7e6      	IN   R30,0x36
000184 70ef      	ANDI R30,LOW(0xF)
000185 6ae0      	ORI  R30,LOW(0xA0)
000186 bfe6      	OUT  0x36,R30
000187 c0fb      	RJMP _0x2000016
                 _0x2000021:
000188 c033      	RJMP _0x2000022
                 _0x2000020:
000189 c0f9      	RJMP _0x2000016
                 _0x200001E:
00018a 35e0      	CPI  R30,LOW(0x50)
00018b f429      	BRNE _0x2000023
00018c b1e3      	IN   R30,0x3
00018d 01da      	MOVW R26,R20
00018e 93ec      	ST   X,R30
00018f 5f1f      	SUBI R17,-LOW(1)
000190 c002      	RJMP _0x2000024
                 _0x2000023:
000191 34e0      	CPI  R30,LOW(0x40)
000192 f471      	BRNE _0x2000025
                 _0x2000024:
000193 91e0 020f 	LDS  R30,_bytes_to_rx_G100
000195 50e1      	SUBI R30,LOW(1)
000196 171e      	CP   R17,R30
000197 f020      	BRLO _0x2000026
000198 b7e6      	IN   R30,0x36
000199 70ef      	ANDI R30,LOW(0xF)
00019a 68e0      	ORI  R30,0x80
00019b c003      	RJMP _0x2000068
                 _0x2000026:
00019c b7e6      	IN   R30,0x36
00019d 70ef      	ANDI R30,LOW(0xF)
00019e 6ce0      	ORI  R30,LOW(0xC0)
                 _0x2000068:
00019f bfe6      	OUT  0x36,R30
0001a0 c0e2      	RJMP _0x2000016
                 _0x2000025:
0001a1 35e8      	CPI  R30,LOW(0x58)
0001a2 f429      	BRNE _0x2000028
0001a3 b1e3      	IN   R30,0x3
0001a4 01da      	MOVW R26,R20
0001a5 93ec      	ST   X,R30
0001a6 5f1f      	SUBI R17,-LOW(1)
0001a7 c002      	RJMP _0x2000029
                 _0x2000028:
0001a8 32e0      	CPI  R30,LOW(0x20)
0001a9 f409      	BRNE _0x200002A
                 _0x2000029:
0001aa c002      	RJMP _0x200002B
                 _0x200002A:
0001ab 33e0      	CPI  R30,LOW(0x30)
0001ac f409      	BRNE _0x200002C
                 _0x200002B:
0001ad c002      	RJMP _0x200002D
                 _0x200002C:
0001ae 34e8      	CPI  R30,LOW(0x48)
0001af f469      	BRNE _0x200002E
                 _0x200002D:
0001b0 3020      	CPI  R18,0
0001b1 f451      	BRNE _0x200002F
0001b2 fe20      	SBRS R2,0
0001b3 c003      	RJMP _0x2000030
0001b4 1703      	CP   R16,R19
0001b5 f028      	BRLO _0x2000032
0001b6 c005      	RJMP _0x2000033
                 _0x2000030:
0001b7 91e0 020f 	LDS  R30,_bytes_to_rx_G100
0001b9 171e      	CP   R17,R30
0001ba f408      	BRSH _0x2000034
                 _0x2000032:
0001bb e024      	LDI  R18,LOW(4)
                 _0x2000034:
                 _0x2000033:
                 _0x200002F:
                 _0x2000022:
0001bc c0c0      	RJMP _0x2000069
                 _0x200002E:
0001bd 33e8      	CPI  R30,LOW(0x38)
0001be f429      	BRNE _0x2000037
0001bf e022      	LDI  R18,LOW(2)
0001c0 b7e6      	IN   R30,0x36
0001c1 70ef      	ANDI R30,LOW(0xF)
0001c2 68e0      	ORI  R30,0x80
0001c3 c0bc      	RJMP _0x200006A
                 _0x2000037:
0001c4 36e8      	CPI  R30,LOW(0x68)
0001c5 f011      	BREQ _0x200003A
0001c6 37e8      	CPI  R30,LOW(0x78)
0001c7 f411      	BRNE _0x200003B
                 _0x200003A:
0001c8 e022      	LDI  R18,LOW(2)
0001c9 c005      	RJMP _0x200003C
                 _0x200003B:
0001ca 36e0      	CPI  R30,LOW(0x60)
0001cb f011      	BREQ _0x200003F
0001cc 37e0      	CPI  R30,LOW(0x70)
0001cd f491      	BRNE _0x2000040
                 _0x200003F:
0001ce e020      	LDI  R18,LOW(0)
                 _0x200003C:
0001cf e010      	LDI  R17,LOW(0)
0001d0 94e8      	CLT
0001d1 f820      	BLD  R2,0
0001d2 91e0 0210 	LDS  R30,_twi_rx_buffer_size_G100
0001d4 30e0      	CPI  R30,0
0001d5 f429      	BRNE _0x2000041
0001d6 e021      	LDI  R18,LOW(1)
0001d7 b7e6      	IN   R30,0x36
0001d8 70ef      	ANDI R30,LOW(0xF)
0001d9 68e0      	ORI  R30,0x80
0001da c003      	RJMP _0x200006B
                 _0x2000041:
0001db b7e6      	IN   R30,0x36
0001dc 70ef      	ANDI R30,LOW(0xF)
0001dd 6ce0      	ORI  R30,LOW(0xC0)
                 _0x200006B:
0001de bfe6      	OUT  0x36,R30
0001df c0a3      	RJMP _0x2000016
                 _0x2000040:
0001e0 38e0      	CPI  R30,LOW(0x80)
0001e1 f011      	BREQ _0x2000044
0001e2 39e0      	CPI  R30,LOW(0x90)
0001e3 f529      	BRNE _0x2000045
                 _0x2000044:
0001e4 fe20      	SBRS R2,0
0001e5 c002      	RJMP _0x2000046
0001e6 e021      	LDI  R18,LOW(1)
0001e7 c095      	RJMP _0x2000047
                 _0x2000046:
0001e8 b1e3      	IN   R30,0x3
0001e9 01da      	MOVW R26,R20
0001ea 93ec      	ST   X,R30
0001eb 5f1f      	SUBI R17,-LOW(1)
0001ec 91e0 0210 	LDS  R30,_twi_rx_buffer_size_G100
0001ee 171e      	CP   R17,R30
0001ef f4b0      	BRSH _0x2000048
0001f0 91e0 0211 	LDS  R30,_twi_slave_rx_handler_G100
0001f2 91f0 0212 	LDS  R31,_twi_slave_rx_handler_G100+1
0001f4 9730      	SBIW R30,0
0001f5 f411      	BRNE _0x2000049
0001f6 e026      	LDI  R18,LOW(6)
0001f7 c085      	RJMP _0x2000047
                 _0x2000049:
0001f8 e0a0      	LDI  R26,LOW(0)
                +
0001f9 91e0 0211+LDS R30 , _twi_slave_rx_handler_G100 + ( 0 )
0001fb 91f0 0212+LDS R31 , _twi_slave_rx_handler_G100 + ( 0 ) + 1
0001fd 9509     +ICALL
                 	__CALL1MN _twi_slave_rx_handler_G100,0
0001fe 30e0      	CPI  R30,0
0001ff f029      	BREQ _0x200004A
000200 b7e6      	IN   R30,0x36
000201 70ef      	ANDI R30,LOW(0xF)
000202 6ce0      	ORI  R30,LOW(0xC0)
000203 bfe6      	OUT  0x36,R30
000204 c07e      	RJMP _0x2000016
                 _0x200004A:
000205 c002      	RJMP _0x200004B
                 _0x2000048:
000206 9468      	SET
000207 f820      	BLD  R2,0
                 _0x200004B:
000208 c002      	RJMP _0x200004C
                 _0x2000045:
000209 38e8      	CPI  R30,LOW(0x88)
00020a f409      	BRNE _0x200004D
                 _0x200004C:
00020b c002      	RJMP _0x200004E
                 _0x200004D:
00020c 39e8      	CPI  R30,LOW(0x98)
00020d f429      	BRNE _0x200004F
                 _0x200004E:
00020e b7e6      	IN   R30,0x36
00020f 70ef      	ANDI R30,LOW(0xF)
000210 68e0      	ORI  R30,0x80
000211 bfe6      	OUT  0x36,R30
000212 c070      	RJMP _0x2000016
                 _0x200004F:
000213 3ae0      	CPI  R30,LOW(0xA0)
000214 f4a9      	BRNE _0x2000050
000215 b7e6      	IN   R30,0x36
000216 70ef      	ANDI R30,LOW(0xF)
000217 6ce0      	ORI  R30,LOW(0xC0)
000218 bfe6      	OUT  0x36,R30
000219 9468      	SET
00021a f821      	BLD  R2,1
00021b 91e0 0211 	LDS  R30,_twi_slave_rx_handler_G100
00021d 91f0 0212 	LDS  R31,_twi_slave_rx_handler_G100+1
00021f 9730      	SBIW R30,0
000220 f039      	BREQ _0x2000051
000221 e0a1      	LDI  R26,LOW(1)
                +
000222 91e0 0211+LDS R30 , _twi_slave_rx_handler_G100 + ( 0 )
000224 91f0 0212+LDS R31 , _twi_slave_rx_handler_G100 + ( 0 ) + 1
000226 9509     +ICALL
                 	__CALL1MN _twi_slave_rx_handler_G100,0
000227 c001      	RJMP _0x2000052
                 _0x2000051:
000228 e026      	LDI  R18,LOW(6)
                 _0x2000052:
000229 c059      	RJMP _0x2000016
                 _0x2000050:
00022a 3be0      	CPI  R30,LOW(0xB0)
00022b f411      	BRNE _0x2000053
00022c e022      	LDI  R18,LOW(2)
00022d c002      	RJMP _0x2000054
                 _0x2000053:
00022e 3ae8      	CPI  R30,LOW(0xA8)
00022f f4b9      	BRNE _0x2000055
                 _0x2000054:
000230 91e0 0213 	LDS  R30,_twi_slave_tx_handler_G100
000232 91f0 0214 	LDS  R31,_twi_slave_tx_handler_G100+1
000234 9730      	SBIW R30,0
000235 f059      	BREQ _0x2000056
000236 e0a0      	LDI  R26,LOW(0)
                +
000237 91e0 0213+LDS R30 , _twi_slave_tx_handler_G100 + ( 0 )
000239 91f0 0214+LDS R31 , _twi_slave_tx_handler_G100 + ( 0 ) + 1
00023b 9509     +ICALL
                 	__CALL1MN _twi_slave_tx_handler_G100,0
00023c 2f3e      	MOV  R19,R30
00023d 30e0      	CPI  R30,0
00023e f011      	BREQ _0x2000058
00023f e020      	LDI  R18,LOW(0)
000240 c002      	RJMP _0x2000059
                 _0x2000056:
                 _0x2000058:
000241 e026      	LDI  R18,LOW(6)
000242 c03a      	RJMP _0x2000047
                 _0x2000059:
000243 e000      	LDI  R16,LOW(0)
000244 94e8      	CLT
000245 f820      	BLD  R2,0
000246 c002      	RJMP _0x200005A
                 _0x2000055:
000247 3be8      	CPI  R30,LOW(0xB8)
000248 f4e1      	BRNE _0x200005B
                 _0x200005A:
000249 fe20      	SBRS R2,0
00024a c002      	RJMP _0x200005C
00024b e021      	LDI  R18,LOW(1)
00024c c030      	RJMP _0x2000047
                 _0x200005C:
00024d 2fe0      	MOV  R30,R16
00024e 5f0f      	SUBI R16,-1
00024f 91a0 020a 	LDS  R26,_twi_tx_buffer_G100
000251 91b0 020b 	LDS  R27,_twi_tx_buffer_G100+1
000253 e0f0      	LDI  R31,0
000254 0fae      	ADD  R26,R30
000255 1fbf      	ADC  R27,R31
000256 91ec      	LD   R30,X
000257 b9e3      	OUT  0x3,R30
000258 1703      	CP   R16,R19
000259 f420      	BRSH _0x200005D
00025a b7e6      	IN   R30,0x36
00025b 70ef      	ANDI R30,LOW(0xF)
00025c 6ce0      	ORI  R30,LOW(0xC0)
00025d c005      	RJMP _0x200006C
                 _0x200005D:
00025e 9468      	SET
00025f f820      	BLD  R2,0
000260 b7e6      	IN   R30,0x36
000261 70ef      	ANDI R30,LOW(0xF)
000262 68e0      	ORI  R30,0x80
                 _0x200006C:
000263 bfe6      	OUT  0x36,R30
000264 c01e      	RJMP _0x2000016
                 _0x200005B:
000265 3ce0      	CPI  R30,LOW(0xC0)
000266 f011      	BREQ _0x2000060
000267 3ce8      	CPI  R30,LOW(0xC8)
000268 f489      	BRNE _0x2000061
                 _0x2000060:
000269 b7e6      	IN   R30,0x36
00026a 70ef      	ANDI R30,LOW(0xF)
00026b 6ce0      	ORI  R30,LOW(0xC0)
00026c bfe6      	OUT  0x36,R30
00026d 91e0 0213 	LDS  R30,_twi_slave_tx_handler_G100
00026f 91f0 0214 	LDS  R31,_twi_slave_tx_handler_G100+1
000271 9730      	SBIW R30,0
000272 f031      	BREQ _0x2000062
000273 e0a1      	LDI  R26,LOW(1)
                +
000274 91e0 0213+LDS R30 , _twi_slave_tx_handler_G100 + ( 0 )
000276 91f0 0214+LDS R31 , _twi_slave_tx_handler_G100 + ( 0 ) + 1
000278 9509     +ICALL
                 	__CALL1MN _twi_slave_tx_handler_G100,0
                 _0x2000062:
000279 c007      	RJMP _0x2000035
                 _0x2000061:
00027a 30e0      	CPI  R30,0
00027b f439      	BRNE _0x2000016
00027c e023      	LDI  R18,LOW(3)
                 _0x2000047:
                 _0x2000069:
00027d b7e6      	IN   R30,0x36
00027e 70ef      	ANDI R30,LOW(0xF)
00027f 6de0      	ORI  R30,LOW(0xD0)
                 _0x200006A:
000280 bfe6      	OUT  0x36,R30
                 _0x2000035:
000281 9468      	SET
000282 f821      	BLD  R2,1
                 _0x2000016:
000283 9310 01fa 	STS  _twi_rx_index,R17
000285 9300 01f9 	STS  _twi_tx_index,R16
000287 9320 01fb 	STS  _twi_result,R18
000289 9330 020c 	STS  _bytes_to_tx_G100,R19
00028b d97e      	RCALL __LOADLOCR6
00028c 9626      	ADIW R28,6
00028d 91e9      	LD   R30,Y+
00028e bfef      	OUT  SREG,R30
00028f 91f9      	LD   R31,Y+
000290 91e9      	LD   R30,Y+
000291 91b9      	LD   R27,Y+
000292 91a9      	LD   R26,Y+
000293 9199      	LD   R25,Y+
000294 9189      	LD   R24,Y+
000295 9179      	LD   R23,Y+
000296 9169      	LD   R22,Y+
000297 90f9      	LD   R15,Y+
000298 9019      	LD   R1,Y+
000299 9009      	LD   R0,Y+
00029a 9518      	RETI
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
00029b d946      	RCALL __PUTPARD2
00029c 817b         ldd  r23,y+3
00029d 816a         ldd  r22,y+2
00029e 81f9         ldd  r31,y+1
00029f 81e8         ld   r30,y
0002a0 fb77         bst  r23,7
0002a1 0f77         lsl  r23
0002a2 fd67         sbrc r22,7
0002a3 6071         sbr  r23,1
0002a4 2f97         mov  r25,r23
0002a5 579e         subi r25,0x7e
0002a6 f081         breq __ftrunc0
0002a7 f078         brcs __ftrunc0
0002a8 3198         cpi  r25,24
0002a9 f490         brsh __ftrunc1
0002aa 27aa         clr  r26
0002ab 27bb         clr  r27
0002ac 2788         clr  r24
                 __ftrunc2:
0002ad 9408         sec
0002ae 9587         ror  r24
0002af 95b7         ror  r27
0002b0 95a7         ror  r26
0002b1 959a         dec  r25
0002b2 f7d1         brne __ftrunc2
0002b3 23ea         and  r30,r26
0002b4 23fb         and  r31,r27
0002b5 2368         and  r22,r24
0002b6 c005         rjmp __ftrunc1
                 __ftrunc0:
0002b7 94e8         clt
0002b8 2777         clr  r23
0002b9 27ee         clr  r30
0002ba 27ff         clr  r31
0002bb 2766         clr  r22
                 __ftrunc1:
0002bc 776f         cbr  r22,0x80
0002bd 9576         lsr  r23
0002be f408         brcc __ftrunc3
0002bf 6860         sbr  r22,0x80
                 __ftrunc3:
0002c0 f977         bld  r23,7
0002c1 91a9         ld   r26,y+
0002c2 91b9         ld   r27,y+
0002c3 9189         ld   r24,y+
0002c4 9199         ld   r25,y+
0002c5 17ea         cp   r30,r26
0002c6 07fb         cpc  r31,r27
0002c7 0768         cpc  r22,r24
0002c8 0779         cpc  r23,r25
0002c9 fb97         bst  r25,7
0002ca 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
0002cb d916      	RCALL __PUTPARD2
0002cc d906      	RCALL __GETD2S0
0002cd dfcd      	RCALL _ftrunc
0002ce d909      	RCALL __PUTD1S0
0002cf f411          brne __floor1
                 __floor0:
0002d0 d4e5      	RCALL SUBOPT_0x4
0002d1 c003      	RJMP _0x20E000C
                 __floor1:
0002d2 f7ee          brtc __floor0
0002d3 d4e2      	RCALL SUBOPT_0x4
0002d4 d4e3      	RCALL SUBOPT_0x5
                 _0x20E000C:
0002d5 9624      	ADIW R28,4
0002d6 9508      	RET
                 ; .FEND
                 _log:
                 ; .FSTART _log
0002d7 d90a      	RCALL __PUTPARD2
0002d8 9724      	SBIW R28,4
0002d9 d92d      	RCALL __SAVELOCR2
0002da d4e3      	RCALL SUBOPT_0x6
0002db d91c      	RCALL __CPD02
0002dc f02c      	BRLT _0x202000C
                +
0002dd efef     +LDI R30 , LOW ( 0xFF7FFFFF )
0002de efff     +LDI R31 , HIGH ( 0xFF7FFFFF )
0002df e76f     +LDI R22 , BYTE3 ( 0xFF7FFFFF )
0002e0 ef7f     +LDI R23 , BYTE4 ( 0xFF7FFFFF )
                 	__GETD1N 0xFF7FFFFF
0002e1 c056      	RJMP _0x20E000B
                 _0x202000C:
0002e2 d4e0      	RCALL SUBOPT_0x7
0002e3 d8f9      	RCALL __PUTPARD1
0002e4 b7ad      	IN   R26,SPL
0002e5 b7be      	IN   R27,SPH
0002e6 9711      	SBIW R26,1
0002e7 931f      	PUSH R17
0002e8 930f      	PUSH R16
0002e9 d698      	RCALL _frexp
0002ea 910f      	POP  R16
0002eb 911f      	POP  R17
0002ec d4db      	RCALL SUBOPT_0x8
0002ed d4d0      	RCALL SUBOPT_0x6
                +
0002ee efe3     +LDI R30 , LOW ( 0x3F3504F3 )
0002ef e0f4     +LDI R31 , HIGH ( 0x3F3504F3 )
0002f0 e365     +LDI R22 , BYTE3 ( 0x3F3504F3 )
0002f1 e37f     +LDI R23 , BYTE4 ( 0x3F3504F3 )
                 	__GETD1N 0x3F3504F3
0002f2 d835      	RCALL __CMPF12
0002f3 f430      	BRSH _0x202000D
0002f4 d4ce      	RCALL SUBOPT_0x7
0002f5 d4c8      	RCALL SUBOPT_0x6
0002f6 d74e      	RCALL __ADDF12
0002f7 d4d0      	RCALL SUBOPT_0x8
                +
0002f8 5001     +SUBI R16 , LOW ( 1 )
0002f9 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
                 _0x202000D:
0002fa d4c8      	RCALL SUBOPT_0x7
0002fb d4bc      	RCALL SUBOPT_0x5
0002fc 937f      	PUSH R23
0002fd 936f      	PUSH R22
0002fe 93ff      	PUSH R31
0002ff 93ef      	PUSH R30
000300 d4c2      	RCALL SUBOPT_0x7
                +
000301 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000302 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000303 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000304 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000305 d73f      	RCALL __ADDF12
000306 91af      	POP  R26
000307 91bf      	POP  R27
000308 918f      	POP  R24
000309 919f      	POP  R25
00030a d7d8      	RCALL __DIVF21
00030b d4c1      	RCALL SUBOPT_0x9
                +
00030c e2a6     +LDI R26 , LOW ( 0x3F654226 )
00030d e4b2     +LDI R27 , HIGH ( 0x3F654226 )
00030e e685     +LDI R24 , BYTE3 ( 0x3F654226 )
00030f e39f     +LDI R25 , BYTE4 ( 0x3F654226 )
                 	__GETD2N 0x3F654226
000310 d784      	RCALL __MULF12
000311 d49e      	RCALL SUBOPT_0x2
                +
000312 e4ee     +LDI R30 , LOW ( 0x4054114E )
000313 e1f1     +LDI R31 , HIGH ( 0x4054114E )
000314 e564     +LDI R22 , BYTE3 ( 0x4054114E )
000315 e470     +LDI R23 , BYTE4 ( 0x4054114E )
                 	__GETD1N 0x4054114E
000316 d4bf      	RCALL SUBOPT_0xA
000317 d4a6      	RCALL SUBOPT_0x6
000318 d77c      	RCALL __MULF12
000319 937f      	PUSH R23
00031a 936f      	PUSH R22
00031b 93ff      	PUSH R31
00031c 93ef      	PUSH R30
00031d d4bb      	RCALL SUBOPT_0xB
                +
00031e e4ad     +LDI R26 , LOW ( 0x3FD4114D )
00031f e1b1     +LDI R27 , HIGH ( 0x3FD4114D )
000320 ed84     +LDI R24 , BYTE3 ( 0x3FD4114D )
000321 e39f     +LDI R25 , BYTE4 ( 0x3FD4114D )
                 	__GETD2N 0x3FD4114D
000322 d71b      	RCALL __SUBF12
000323 91af      	POP  R26
000324 91bf      	POP  R27
000325 918f      	POP  R24
000326 919f      	POP  R25
000327 d7bb      	RCALL __DIVF21
000328 937f      	PUSH R23
000329 936f      	PUSH R22
00032a 93ff      	PUSH R31
00032b 93ef      	PUSH R30
00032c 01f8      	MOVW R30,R16
00032d d4b0      	RCALL SUBOPT_0xC
                +
00032e e1a8     +LDI R26 , LOW ( 0x3F317218 )
00032f e7b2     +LDI R27 , HIGH ( 0x3F317218 )
000330 e381     +LDI R24 , BYTE3 ( 0x3F317218 )
000331 e39f     +LDI R25 , BYTE4 ( 0x3F317218 )
                 	__GETD2N 0x3F317218
000332 d762      	RCALL __MULF12
000333 91af      	POP  R26
000334 91bf      	POP  R27
000335 918f      	POP  R24
000336 919f      	POP  R25
000337 d70d      	RCALL __ADDF12
                 _0x20E000B:
000338 d8d5      	RCALL __LOADLOCR2
000339 962a      	ADIW R28,10
00033a 9508      	RET
                 ; .FEND
                 _exp:
                 ; .FSTART _exp
00033b d8a6      	RCALL __PUTPARD2
00033c 9728      	SBIW R28,8
00033d d8c9      	RCALL __SAVELOCR2
00033e d4a2      	RCALL SUBOPT_0xD
                +
00033f e5e0     +LDI R30 , LOW ( 0xC2AEAC50 )
000340 eafc     +LDI R31 , HIGH ( 0xC2AEAC50 )
000341 ea6e     +LDI R22 , BYTE3 ( 0xC2AEAC50 )
000342 ec72     +LDI R23 , BYTE4 ( 0xC2AEAC50 )
                 	__GETD1N 0xC2AEAC50
000343 d7e4      	RCALL __CMPF12
000344 f410      	BRSH _0x202000F
000345 d4a0      	RCALL SUBOPT_0xE
000346 c053      	RJMP _0x20E000A
                 _0x202000F:
000347 d4a3      	RCALL SUBOPT_0xF
000348 d8ab      	RCALL __CPD10
000349 f411      	BRNE _0x2020010
00034a d4a5      	RCALL SUBOPT_0x10
00034b c04e      	RJMP _0x20E000A
                 _0x2020010:
00034c d494      	RCALL SUBOPT_0xD
                +
00034d e1e8     +LDI R30 , LOW ( 0x42B17218 )
00034e e7f2     +LDI R31 , HIGH ( 0x42B17218 )
00034f eb61     +LDI R22 , BYTE3 ( 0x42B17218 )
000350 e472     +LDI R23 , BYTE4 ( 0x42B17218 )
                 	__GETD1N 0x42B17218
000351 d7d6      	RCALL __CMPF12
000352 f009      	BREQ PC+2
000353 f408      	BRCC PC+2
000354 c005      	RJMP _0x2020011
                +
000355 efef     +LDI R30 , LOW ( 0x7F7FFFFF )
000356 efff     +LDI R31 , HIGH ( 0x7F7FFFFF )
000357 e76f     +LDI R22 , BYTE3 ( 0x7F7FFFFF )
000358 e77f     +LDI R23 , BYTE4 ( 0x7F7FFFFF )
                 	__GETD1N 0x7F7FFFFF
000359 c040      	RJMP _0x20E000A
                 _0x2020011:
00035a d486      	RCALL SUBOPT_0xD
                +
00035b e3eb     +LDI R30 , LOW ( 0x3FB8AA3B )
00035c eafa     +LDI R31 , HIGH ( 0x3FB8AA3B )
00035d eb68     +LDI R22 , BYTE3 ( 0x3FB8AA3B )
00035e e37f     +LDI R23 , BYTE4 ( 0x3FB8AA3B )
                 	__GETD1N 0x3FB8AA3B
00035f d735      	RCALL __MULF12
000360 d494      	RCALL SUBOPT_0x11
000361 d47f      	RCALL SUBOPT_0xD
000362 df68      	RCALL _floor
000363 d670      	RCALL __CFD1
000364 018f      	MOVW R16,R30
000365 d47b      	RCALL SUBOPT_0xD
000366 d477      	RCALL SUBOPT_0xC
000367 d46e      	RCALL SUBOPT_0xA
000368 d447      	RCALL SUBOPT_0x2
                +
000369 e0e0     +LDI R30 , LOW ( 0x3F000000 )
00036a e0f0     +LDI R31 , HIGH ( 0x3F000000 )
00036b e060     +LDI R22 , BYTE3 ( 0x3F000000 )
00036c e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
00036d d468      	RCALL SUBOPT_0xA
00036e d45e      	RCALL SUBOPT_0x9
                +
00036f e6ad     +LDI R26 , LOW ( 0x3D6C4C6D )
000370 e4bc     +LDI R27 , HIGH ( 0x3D6C4C6D )
000371 e68c     +LDI R24 , BYTE3 ( 0x3D6C4C6D )
000372 e39d     +LDI R25 , BYTE4 ( 0x3D6C4C6D )
                 	__GETD2N 0x3D6C4C6D
000373 d721      	RCALL __MULF12
                +
000374 eaa6     +LDI R26 , LOW ( 0x40E6E3A6 )
000375 eeb3     +LDI R27 , HIGH ( 0x40E6E3A6 )
000376 ee86     +LDI R24 , BYTE3 ( 0x40E6E3A6 )
000377 e490     +LDI R25 , BYTE4 ( 0x40E6E3A6 )
                 	__GETD2N 0x40E6E3A6
000378 d6cc      	RCALL __ADDF12
000379 d444      	RCALL SUBOPT_0x6
00037a d71a      	RCALL __MULF12
00037b d44c      	RCALL SUBOPT_0x8
00037c d45c      	RCALL SUBOPT_0xB
                +
00037d e2a8     +LDI R26 , LOW ( 0x41A68D28 )
00037e e8bd     +LDI R27 , HIGH ( 0x41A68D28 )
00037f ea86     +LDI R24 , BYTE3 ( 0x41A68D28 )
000380 e491     +LDI R25 , BYTE4 ( 0x41A68D28 )
                 	__GETD2N 0x41A68D28
000381 d6c3      	RCALL __ADDF12
000382 d477      	RCALL SUBOPT_0x12
000383 d43f      	RCALL SUBOPT_0x7
000384 d47a      	RCALL SUBOPT_0x13
000385 d6bf      	RCALL __ADDF12
                +
000386 efa3     +LDI R26 , LOW ( 0x3FB504F3 )
000387 e0b4     +LDI R27 , HIGH ( 0x3FB504F3 )
000388 eb85     +LDI R24 , BYTE3 ( 0x3FB504F3 )
000389 e39f     +LDI R25 , BYTE4 ( 0x3FB504F3 )
                 	__GETD2N 0x3FB504F3
00038a d70a      	RCALL __MULF12
00038b 937f      	PUSH R23
00038c 936f      	PUSH R22
00038d 93ff      	PUSH R31
00038e 93ef      	PUSH R30
00038f d42e      	RCALL SUBOPT_0x6
000390 d448      	RCALL SUBOPT_0xB
000391 d6ac      	RCALL __SUBF12
000392 91af      	POP  R26
000393 91bf      	POP  R27
000394 918f      	POP  R24
000395 919f      	POP  R25
000396 d74c      	RCALL __DIVF21
000397 d845      	RCALL __PUTPARD1
000398 01d8      	MOVW R26,R16
000399 d5f9      	RCALL _ldexp
                 _0x20E000A:
00039a d873      	RCALL __LOADLOCR2
00039b 962e      	ADIW R28,14
00039c 9508      	RET
                 ; .FEND
                 _pow:
                 ; .FSTART _pow
00039d d844      	RCALL __PUTPARD2
00039e 9724      	SBIW R28,4
00039f d464      	RCALL SUBOPT_0x14
0003a0 d853      	RCALL __CPD10
0003a1 f411      	BRNE _0x2020012
0003a2 d443      	RCALL SUBOPT_0xE
0003a3 c027      	RJMP _0x20E0009
                 _0x2020012:
0003a4 d464      	RCALL SUBOPT_0x15
0003a5 d852      	RCALL __CPD02
0003a6 f444      	BRGE _0x2020013
0003a7 d466      	RCALL SUBOPT_0x16
0003a8 d84b      	RCALL __CPD10
0003a9 f411      	BRNE _0x2020014
0003aa d445      	RCALL SUBOPT_0x10
0003ab c01f      	RJMP _0x20E0009
                 _0x2020014:
0003ac d45c      	RCALL SUBOPT_0x15
0003ad d465      	RCALL SUBOPT_0x17
0003ae c01c      	RJMP _0x20E0009
                 _0x2020013:
0003af d45e      	RCALL SUBOPT_0x16
0003b0 01de      	MOVW R26,R28
0003b1 d622      	RCALL __CFD1
0003b2 d80f      	RCALL __PUTDP1
0003b3 d402      	RCALL SUBOPT_0x4
0003b4 d656      	RCALL __CDF1
0003b5 01df      	MOVW R26,R30
0003b6 01cb      	MOVW R24,R22
0003b7 d456      	RCALL SUBOPT_0x16
0003b8 d845      	RCALL __CPD12
0003b9 f011      	BREQ _0x2020015
0003ba d42b      	RCALL SUBOPT_0xE
0003bb c00f      	RJMP _0x20E0009
                 _0x2020015:
0003bc d447      	RCALL SUBOPT_0x14
0003bd d5e1      	RCALL __ANEGF1
0003be d3f1      	RCALL SUBOPT_0x2
0003bf d453      	RCALL SUBOPT_0x17
                +
0003c0 87e8     +STD Y + 8 , R30
0003c1 87f9     +STD Y + 8 + 1 , R31
0003c2 876a     +STD Y + 8 + 2 , R22
0003c3 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
0003c4 81e8      	LD   R30,Y
0003c5 70e1      	ANDI R30,LOW(0x1)
0003c6 f411      	BRNE _0x2020016
0003c7 d43c      	RCALL SUBOPT_0x14
0003c8 c002      	RJMP _0x20E0009
                 _0x2020016:
0003c9 d43a      	RCALL SUBOPT_0x14
0003ca d5d4      	RCALL __ANEGF1
                 _0x20E0009:
0003cb 962c      	ADIW R28,12
0003cc 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
                 ; .FSTART _putchar
0003cd 93aa      	ST   -Y,R26
                 putchar0:
0003ce 9b5d           sbis usr,udre
0003cf cffe           rjmp putchar0
0003d0 81e8           ld   r30,y
0003d1 b9ec           out  udr,r30
                 _0x20E0008:
0003d2 9621      	ADIW R28,1
0003d3 9508      	RET
                 ; .FEND
                 _put_usart_G102:
                 ; .FSTART _put_usart_G102
0003d4 d3de      	RCALL SUBOPT_0x3
0003d5 81aa      	LDD  R26,Y+2
0003d6 dff6      	RCALL _putchar
0003d7 81a8      	LD   R26,Y
0003d8 81b9      	LDD  R27,Y+1
0003d9 d441      	RCALL SUBOPT_0x18
0003da c2ed      	RJMP _0x20E0005
                 ; .FEND
                 __ftoe_G102:
                 ; .FSTART __ftoe_G102
0003db d445      	RCALL SUBOPT_0x19
0003dc e8e0      	LDI  R30,LOW(128)
0003dd 83ea      	STD  Y+2,R30
0003de e3ef      	LDI  R30,LOW(63)
0003df 83eb      	STD  Y+3,R30
0003e0 d824      	RCALL __SAVELOCR4
0003e1 85ee      	LDD  R30,Y+14
0003e2 85ff      	LDD  R31,Y+14+1
0003e3 3fef      	CPI  R30,LOW(0xFFFF)
0003e4 efaf      	LDI  R26,HIGH(0xFFFF)
0003e5 07fa      	CPC  R31,R26
0003e6 f439      	BRNE _0x2040019
0003e7 85e8      	LDD  R30,Y+8
0003e8 85f9      	LDD  R31,Y+8+1
0003e9 d3be      	RCALL SUBOPT_0x0
                +
0003ea edac     +LDI R26 , LOW ( 2 * _0x2040000 + ( 0 ) )
0003eb e0b0     +LDI R27 , HIGH ( 2 * _0x2040000 + ( 0 ) )
                 	__POINTW2FN _0x2040000,0
0003ec d318      	RCALL _strcpyf
0003ed c077      	RJMP _0x20E0007
                 _0x2040019:
0003ee 3fef      	CPI  R30,LOW(0x7FFF)
0003ef e7af      	LDI  R26,HIGH(0x7FFF)
0003f0 07fa      	CPC  R31,R26
0003f1 f431      	BRNE _0x2040018
0003f2 d434      	RCALL SUBOPT_0x1A
0003f3 d3b4      	RCALL SUBOPT_0x0
                +
0003f4 edad     +LDI R26 , LOW ( 2 * _0x2040000 + ( 1 ) )
0003f5 e0b0     +LDI R27 , HIGH ( 2 * _0x2040000 + ( 1 ) )
                 	__POINTW2FN _0x2040000,1
0003f6 d30e      	RCALL _strcpyf
0003f7 c06d      	RJMP _0x20E0007
                 _0x2040018:
0003f8 85ab      	LDD  R26,Y+11
0003f9 30a7      	CPI  R26,LOW(0x7)
0003fa f010      	BRLO _0x204001B
0003fb e0e6      	LDI  R30,LOW(6)
0003fc 87eb      	STD  Y+11,R30
                 _0x204001B:
0003fd 851b      	LDD  R17,Y+11
                 _0x204001C:
0003fe d42b      	RCALL SUBOPT_0x1B
0003ff f011      	BREQ _0x204001E
000400 d42d      	RCALL SUBOPT_0x1C
000401 cffc      	RJMP _0x204001C
                 _0x204001E:
000402 d439      	RCALL SUBOPT_0x1D
000403 d7f0      	RCALL __CPD10
000404 f419      	BRNE _0x204001F
000405 e030      	LDI  R19,LOW(0)
000406 d427      	RCALL SUBOPT_0x1C
000407 c01b      	RJMP _0x2040020
                 _0x204001F:
000408 853b      	LDD  R19,Y+11
000409 d437      	RCALL SUBOPT_0x1E
00040a f009      	BREQ PC+2
00040b f408      	BRCC PC+2
00040c c007      	RJMP _0x2040021
00040d d420      	RCALL SUBOPT_0x1C
                 _0x2040022:
00040e d432      	RCALL SUBOPT_0x1E
00040f f018      	BRLO _0x2040024
000410 d437      	RCALL SUBOPT_0x1F
000411 d43b      	RCALL SUBOPT_0x20
000412 cffb      	RJMP _0x2040022
                 _0x2040024:
000413 c008      	RJMP _0x2040025
                 _0x2040021:
                 _0x2040026:
000414 d42c      	RCALL SUBOPT_0x1E
000415 f428      	BRSH _0x2040028
000416 d431      	RCALL SUBOPT_0x1F
000417 d440      	RCALL SUBOPT_0x21
000418 d445      	RCALL SUBOPT_0x22
000419 5031      	SUBI R19,LOW(1)
00041a cff9      	RJMP _0x2040026
                 _0x2040028:
00041b d412      	RCALL SUBOPT_0x1C
                 _0x2040025:
00041c d41f      	RCALL SUBOPT_0x1D
00041d d445      	RCALL SUBOPT_0x23
00041e d43f      	RCALL SUBOPT_0x22
00041f d421      	RCALL SUBOPT_0x1E
000420 f010      	BRLO _0x2040029
000421 d426      	RCALL SUBOPT_0x1F
000422 d42a      	RCALL SUBOPT_0x20
                 _0x2040029:
                 _0x2040020:
000423 e010      	LDI  R17,LOW(0)
                 _0x204002A:
000424 85eb      	LDD  R30,Y+11
000425 17e1      	CP   R30,R17
000426 f0f0      	BRLO _0x204002C
000427 d441      	RCALL SUBOPT_0x24
000428 d445      	RCALL SUBOPT_0x25
000429 d439      	RCALL SUBOPT_0x23
00042a d385      	RCALL SUBOPT_0x2
00042b de9f      	RCALL _floor
                +
00042c 83ec     +STD Y + 4 , R30
00042d 83fd     +STD Y + 4 + 1 , R31
00042e 836e     +STD Y + 4 + 2 , R22
00042f 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000430 d3dd      	RCALL SUBOPT_0x16
000431 d416      	RCALL SUBOPT_0x1F
000432 d6b0      	RCALL __DIVF21
000433 d59e      	RCALL __CFD1U
000434 2f0e      	MOV  R16,R30
000435 d43e      	RCALL SUBOPT_0x26
000436 d444      	RCALL SUBOPT_0x27
000437 d373      	RCALL SUBOPT_0x1
000438 d430      	RCALL SUBOPT_0x24
000439 d65b      	RCALL __MULF12
00043a d40d      	RCALL SUBOPT_0x1F
00043b d39a      	RCALL SUBOPT_0xA
00043c d421      	RCALL SUBOPT_0x22
00043d 2fe1      	MOV  R30,R17
00043e 5f1f      	SUBI R17,-1
00043f 30e0      	CPI  R30,0
000440 f719      	BRNE _0x204002A
000441 d432      	RCALL SUBOPT_0x26
000442 e2ee      	LDI  R30,LOW(46)
000443 93ec      	ST   X,R30
000444 cfdf      	RJMP _0x204002A
                 _0x204002C:
000445 d43a      	RCALL SUBOPT_0x28
000446 9731      	SBIW R30,1
000447 85aa      	LDD  R26,Y+10
000448 83a0      	STD  Z+0,R26
000449 3030      	CPI  R19,0
00044a f42c      	BRGE _0x204002E
00044b 9531      	NEG  R19
00044c 85a8      	LDD  R26,Y+8
00044d 85b9      	LDD  R27,Y+8+1
00044e e2ed      	LDI  R30,LOW(45)
00044f c003      	RJMP _0x2040113
                 _0x204002E:
000450 85a8      	LDD  R26,Y+8
000451 85b9      	LDD  R27,Y+8+1
000452 e2eb      	LDI  R30,LOW(43)
                 _0x2040113:
000453 93ec      	ST   X,R30
000454 d42b      	RCALL SUBOPT_0x28
000455 d42a      	RCALL SUBOPT_0x28
000456 d42e      	RCALL SUBOPT_0x29
000457 d71a      	RCALL __DIVB21
000458 5de0      	SUBI R30,-LOW(48)
000459 01db      	MOVW R26,R22
00045a 93ec      	ST   X,R30
00045b d424      	RCALL SUBOPT_0x28
00045c d428      	RCALL SUBOPT_0x29
00045d d73e      	RCALL __MODB21
00045e 5de0      	SUBI R30,-LOW(48)
00045f 01db      	MOVW R26,R22
000460 93ec      	ST   X,R30
000461 85a8      	LDD  R26,Y+8
000462 85b9      	LDD  R27,Y+8+1
000463 e0e0      	LDI  R30,LOW(0)
000464 93ec      	ST   X,R30
                 _0x20E0007:
000465 d7a6      	RCALL __LOADLOCR4
000466 9660      	ADIW R28,16
000467 9508      	RET
                 ; .FEND
                 __print_G102:
                 ; .FSTART __print_G102
000468 d34a      	RCALL SUBOPT_0x3
000469 97ef      	SBIW R28,63
00046a 9761      	SBIW R28,17
00046b d797      	RCALL __SAVELOCR6
00046c e010      	LDI  R17,0
                +
00046d 01fe     +MOVW R30 , R28
00046e 5ae8     +SUBI R30 , LOW ( - 88 )
00046f 4fff     +SBCI R31 , HIGH ( - 88 )
000470 9001     +LD R0 , Z +
000471 81f0     +LD R31 , Z
000472 2de0     +MOV R30 , R0
                 	__GETW1SX 88
000473 87e8      	STD  Y+8,R30
000474 87f9      	STD  Y+8+1,R31
                +
000475 01fe     +MOVW R30 , R28
000476 5aea     +SUBI R30 , LOW ( - 86 )
000477 4fff     +SBCI R31 , HIGH ( - 86 )
000478 9001     +LD R0 , Z +
000479 81f0     +LD R31 , Z
00047a 2de0     +MOV R30 , R0
                 	__GETW1SX 86
00047b 83ee      	STD  Y+6,R30
00047c 83ff      	STD  Y+6+1,R31
00047d d40c      	RCALL SUBOPT_0x2A
00047e e0e0      	LDI  R30,LOW(0)
00047f e0f0      	LDI  R31,HIGH(0)
000480 93ed      	ST   X+,R30
000481 93fc      	ST   X,R31
                 _0x2040030:
000482 01de      	MOVW R26,R28
000483 5aa4      	SUBI R26,LOW(-(92))
000484 4fbf      	SBCI R27,HIGH(-(92))
000485 d395      	RCALL SUBOPT_0x18
000486 9731      	SBIW R30,1
000487 91e4      	LPM  R30,Z
000488 2f2e      	MOV  R18,R30
000489 30e0      	CPI  R30,0
00048a f409      	BRNE PC+2
00048b c1a6      	RJMP _0x2040032
00048c 2fe1      	MOV  R30,R17
00048d 30e0      	CPI  R30,0
00048e f431      	BRNE _0x2040036
00048f 3225      	CPI  R18,37
000490 f411      	BRNE _0x2040037
000491 e011      	LDI  R17,LOW(1)
000492 c001      	RJMP _0x2040038
                 _0x2040037:
000493 d3f9      	RCALL SUBOPT_0x2B
                 _0x2040038:
000494 c19c      	RJMP _0x2040035
                 _0x2040036:
000495 30e1      	CPI  R30,LOW(0x1)
000496 f4b9      	BRNE _0x2040039
000497 3225      	CPI  R18,37
000498 f411      	BRNE _0x204003A
000499 d3f3      	RCALL SUBOPT_0x2B
00049a c195      	RJMP _0x2040114
                 _0x204003A:
00049b e012      	LDI  R17,LOW(2)
00049c e0e0      	LDI  R30,LOW(0)
00049d 8bed      	STD  Y+21,R30
00049e e000      	LDI  R16,LOW(0)
00049f 322d      	CPI  R18,45
0004a0 f411      	BRNE _0x204003B
0004a1 e001      	LDI  R16,LOW(1)
0004a2 c18e      	RJMP _0x2040035
                 _0x204003B:
0004a3 322b      	CPI  R18,43
0004a4 f419      	BRNE _0x204003C
0004a5 e2eb      	LDI  R30,LOW(43)
0004a6 8bed      	STD  Y+21,R30
0004a7 c189      	RJMP _0x2040035
                 _0x204003C:
0004a8 3220      	CPI  R18,32
0004a9 f419      	BRNE _0x204003D
0004aa e2e0      	LDI  R30,LOW(32)
0004ab 8bed      	STD  Y+21,R30
0004ac c184      	RJMP _0x2040035
                 _0x204003D:
0004ad c002      	RJMP _0x204003E
                 _0x2040039:
0004ae 30e2      	CPI  R30,LOW(0x2)
0004af f439      	BRNE _0x204003F
                 _0x204003E:
0004b0 e050      	LDI  R21,LOW(0)
0004b1 e013      	LDI  R17,LOW(3)
0004b2 3320      	CPI  R18,48
0004b3 f411      	BRNE _0x2040040
0004b4 6800      	ORI  R16,LOW(128)
0004b5 c17b      	RJMP _0x2040035
                 _0x2040040:
0004b6 c002      	RJMP _0x2040041
                 _0x204003F:
0004b7 30e3      	CPI  R30,LOW(0x3)
0004b8 f491      	BRNE _0x2040042
                 _0x2040041:
0004b9 3320      	CPI  R18,48
0004ba f010      	BRLO _0x2040044
0004bb 332a      	CPI  R18,58
0004bc f008      	BRLO _0x2040045
                 _0x2040044:
0004bd c007      	RJMP _0x2040043
                 _0x2040045:
0004be e0aa      	LDI  R26,LOW(10)
0004bf 9f5a      	MUL  R21,R26
0004c0 2d50      	MOV  R21,R0
0004c1 2fe2      	MOV  R30,R18
0004c2 53e0      	SUBI R30,LOW(48)
0004c3 0f5e      	ADD  R21,R30
0004c4 c16c      	RJMP _0x2040035
                 _0x2040043:
0004c5 e040      	LDI  R20,LOW(0)
0004c6 322e      	CPI  R18,46
0004c7 f411      	BRNE _0x2040046
0004c8 e014      	LDI  R17,LOW(4)
0004c9 c167      	RJMP _0x2040035
                 _0x2040046:
0004ca c00f      	RJMP _0x2040047
                 _0x2040042:
0004cb 30e4      	CPI  R30,LOW(0x4)
0004cc f499      	BRNE _0x2040049
0004cd 3320      	CPI  R18,48
0004ce f010      	BRLO _0x204004B
0004cf 332a      	CPI  R18,58
0004d0 f008      	BRLO _0x204004C
                 _0x204004B:
0004d1 c008      	RJMP _0x204004A
                 _0x204004C:
0004d2 6200      	ORI  R16,LOW(32)
0004d3 e0aa      	LDI  R26,LOW(10)
0004d4 9f4a      	MUL  R20,R26
0004d5 2d40      	MOV  R20,R0
0004d6 2fe2      	MOV  R30,R18
0004d7 53e0      	SUBI R30,LOW(48)
0004d8 0f4e      	ADD  R20,R30
0004d9 c157      	RJMP _0x2040035
                 _0x204004A:
                 _0x2040047:
0004da 362c      	CPI  R18,108
0004db f419      	BRNE _0x204004D
0004dc 6002      	ORI  R16,LOW(2)
0004dd e015      	LDI  R17,LOW(5)
0004de c152      	RJMP _0x2040035
                 _0x204004D:
0004df c003      	RJMP _0x204004E
                 _0x2040049:
0004e0 30e5      	CPI  R30,LOW(0x5)
0004e1 f009      	BREQ PC+2
0004e2 c14e      	RJMP _0x2040035
                 _0x204004E:
0004e3 2fe2      	MOV  R30,R18
0004e4 36e3      	CPI  R30,LOW(0x63)
0004e5 f439      	BRNE _0x2040053
0004e6 d3ad      	RCALL SUBOPT_0x2C
0004e7 d3b3      	RCALL SUBOPT_0x2D
0004e8 d3ab      	RCALL SUBOPT_0x2C
0004e9 81a4      	LDD  R26,Z+4
0004ea 93aa      	ST   -Y,R26
0004eb d3b6      	RCALL SUBOPT_0x2E
0004ec c143      	RJMP _0x2040054
                 _0x2040053:
0004ed 34e5      	CPI  R30,LOW(0x45)
0004ee f011      	BREQ _0x2040057
0004ef 36e5      	CPI  R30,LOW(0x65)
0004f0 f409      	BRNE _0x2040058
                 _0x2040057:
0004f1 c002      	RJMP _0x2040059
                 _0x2040058:
0004f2 36e6      	CPI  R30,LOW(0x66)
0004f3 f5a9      	BRNE _0x204005A
                 _0x2040059:
0004f4 d3b3      	RCALL SUBOPT_0x2F
0004f5 d3b7      	RCALL SUBOPT_0x30
0004f6 d6c5      	RCALL __GETD1P
0004f7 d2fd      	RCALL SUBOPT_0x11
0004f8 d3bb      	RCALL SUBOPT_0x31
0004f9 85ad      	LDD  R26,Y+13
0004fa 23aa      	TST  R26
0004fb f032      	BRMI _0x204005B
0004fc 89ad      	LDD  R26,Y+21
0004fd 32ab      	CPI  R26,LOW(0x2B)
0004fe f041      	BREQ _0x204005D
0004ff 32a0      	CPI  R26,LOW(0x20)
000500 f061      	BREQ _0x204005F
000501 c012      	RJMP _0x2040060
                 _0x204005B:
000502 d2e8      	RCALL SUBOPT_0xF
000503 d49b      	RCALL __ANEGF1
000504 d2f0      	RCALL SUBOPT_0x11
000505 e2ed      	LDI  R30,LOW(45)
000506 8bed      	STD  Y+21,R30
                 _0x204005D:
000507 ff07      	SBRS R16,7
000508 c004      	RJMP _0x2040061
000509 89ed      	LDD  R30,Y+21
00050a 93ea      	ST   -Y,R30
00050b d396      	RCALL SUBOPT_0x2E
00050c c007      	RJMP _0x2040062
                 _0x2040061:
                 _0x204005F:
00050d 85ee      	LDD  R30,Y+14
00050e 85ff      	LDD  R31,Y+14+1
00050f 9631      	ADIW R30,1
000510 d3a5      	RCALL SUBOPT_0x32
000511 9731      	SBIW R30,1
000512 89ad      	LDD  R26,Y+21
000513 83a0      	STD  Z+0,R26
                 _0x2040062:
                 _0x2040060:
000514 ff05      	SBRS R16,5
000515 e046      	LDI  R20,LOW(6)
000516 3626      	CPI  R18,102
000517 f439      	BRNE _0x2040064
000518 d2d2      	RCALL SUBOPT_0xF
000519 d6c3      	RCALL __PUTPARD1
00051a 934a      	ST   -Y,R20
00051b 89ab      	LDD  R26,Y+19
00051c 89bc      	LDD  R27,Y+19+1
00051d d20a      	RCALL _ftoa
00051e c007      	RJMP _0x2040065
                 _0x2040064:
00051f d2cb      	RCALL SUBOPT_0xF
000520 d6bc      	RCALL __PUTPARD1
000521 934a      	ST   -Y,R20
000522 932a      	ST   -Y,R18
000523 89ac      	LDD  R26,Y+20
000524 89bd      	LDD  R27,Y+20+1
000525 deb5      	RCALL __ftoe_G102
                 _0x2040065:
000526 d381      	RCALL SUBOPT_0x2F
000527 d391      	RCALL SUBOPT_0x33
000528 c016      	RJMP _0x2040066
                 _0x204005A:
000529 37e3      	CPI  R30,LOW(0x73)
00052a f421      	BRNE _0x2040068
00052b d388      	RCALL SUBOPT_0x31
00052c d391      	RCALL SUBOPT_0x34
00052d d38b      	RCALL SUBOPT_0x33
00052e c009      	RJMP _0x2040069
                 _0x2040068:
00052f 37e0      	CPI  R30,LOW(0x70)
000530 f499      	BRNE _0x204006B
000531 d382      	RCALL SUBOPT_0x31
000532 d38b      	RCALL SUBOPT_0x34
000533 85ae      	LDD  R26,Y+14
000534 85bf      	LDD  R27,Y+14+1
000535 d1e6      	RCALL _strlenf
000536 2f1e      	MOV  R17,R30
000537 6008      	ORI  R16,LOW(8)
                 _0x2040069:
000538 770f      	ANDI R16,LOW(127)
000539 3040      	CPI  R20,0
00053a f011      	BREQ _0x204006D
00053b 1741      	CP   R20,R17
00053c f008      	BRLO _0x204006E
                 _0x204006D:
00053d c001      	RJMP _0x204006C
                 _0x204006E:
00053e 2f14      	MOV  R17,R20
                 _0x204006C:
                 _0x2040066:
00053f e040      	LDI  R20,LOW(0)
000540 e0e0      	LDI  R30,LOW(0)
000541 8bec      	STD  Y+20,R30
000542 e030      	LDI  R19,LOW(0)
000543 c062      	RJMP _0x204006F
                 _0x204006B:
000544 36e4      	CPI  R30,LOW(0x64)
000545 f011      	BREQ _0x2040072
000546 36e9      	CPI  R30,LOW(0x69)
000547 f411      	BRNE _0x2040073
                 _0x2040072:
000548 6004      	ORI  R16,LOW(4)
000549 c002      	RJMP _0x2040074
                 _0x2040073:
00054a 37e5      	CPI  R30,LOW(0x75)
00054b f491      	BRNE _0x2040075
                 _0x2040074:
00054c e0ea      	LDI  R30,LOW(10)
00054d 8bec      	STD  Y+20,R30
00054e ff01      	SBRS R16,1
00054f c007      	RJMP _0x2040076
                +
000550 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
000551 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
000552 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
000553 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
000554 d36d      	RCALL SUBOPT_0x35
000555 e01a      	LDI  R17,LOW(10)
000556 c01f      	RJMP _0x2040077
                 _0x2040076:
                +
000557 e1e0     +LDI R30 , LOW ( 0x2710 )
000558 e2f7     +LDI R31 , HIGH ( 0x2710 )
000559 e060     +LDI R22 , BYTE3 ( 0x2710 )
00055a e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
00055b d366      	RCALL SUBOPT_0x35
00055c e015      	LDI  R17,LOW(5)
00055d c018      	RJMP _0x2040077
                 _0x2040075:
00055e 35e8      	CPI  R30,LOW(0x58)
00055f f411      	BRNE _0x2040079
000560 6008      	ORI  R16,LOW(8)
000561 c003      	RJMP _0x204007A
                 _0x2040079:
000562 37e8      	CPI  R30,LOW(0x78)
000563 f009      	BREQ PC+2
000564 c0cb      	RJMP _0x20400B8
                 _0x204007A:
000565 e1e0      	LDI  R30,LOW(16)
000566 8bec      	STD  Y+20,R30
000567 ff01      	SBRS R16,1
000568 c007      	RJMP _0x204007C
                +
000569 e0e0     +LDI R30 , LOW ( 0x10000000 )
00056a e0f0     +LDI R31 , HIGH ( 0x10000000 )
00056b e060     +LDI R22 , BYTE3 ( 0x10000000 )
00056c e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
00056d d354      	RCALL SUBOPT_0x35
00056e e018      	LDI  R17,LOW(8)
00056f c006      	RJMP _0x2040077
                 _0x204007C:
                +
000570 e0e0     +LDI R30 , LOW ( 0x1000 )
000571 e1f0     +LDI R31 , HIGH ( 0x1000 )
000572 e060     +LDI R22 , BYTE3 ( 0x1000 )
000573 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
000574 d34d      	RCALL SUBOPT_0x35
000575 e014      	LDI  R17,LOW(4)
                 _0x2040077:
000576 3040      	CPI  R20,0
000577 f011      	BREQ _0x204007D
000578 770f      	ANDI R16,LOW(127)
000579 c001      	RJMP _0x204007E
                 _0x204007D:
00057a e041      	LDI  R20,LOW(1)
                 _0x204007E:
00057b ff01      	SBRS R16,1
00057c c005      	RJMP _0x204007F
00057d d336      	RCALL SUBOPT_0x31
00057e d32e      	RCALL SUBOPT_0x30
00057f 9614      	ADIW R26,4
000580 d63b      	RCALL __GETD1P
000581 c00e      	RJMP _0x2040115
                 _0x204007F:
000582 ff02      	SBRS R16,2
000583 c006      	RJMP _0x2040081
000584 d32f      	RCALL SUBOPT_0x31
000585 d327      	RCALL SUBOPT_0x30
000586 9614      	ADIW R26,4
000587 d630      	RCALL __GETW1P
000588 d5d1      	RCALL __CWD1
000589 c006      	RJMP _0x2040115
                 _0x2040081:
00058a d329      	RCALL SUBOPT_0x31
00058b d321      	RCALL SUBOPT_0x30
00058c 9614      	ADIW R26,4
00058d d62a      	RCALL __GETW1P
00058e 2766      	CLR  R22
00058f 2777      	CLR  R23
                 _0x2040115:
                +
000590 87ea     +STD Y + 10 , R30
000591 87fb     +STD Y + 10 + 1 , R31
000592 876c     +STD Y + 10 + 2 , R22
000593 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000594 ff02      	SBRS R16,2
000595 c00f      	RJMP _0x2040083
000596 85ad      	LDD  R26,Y+13
000597 23aa      	TST  R26
000598 f42a      	BRPL _0x2040084
000599 d251      	RCALL SUBOPT_0xF
00059a d5b1      	RCALL __ANEGD1
00059b d259      	RCALL SUBOPT_0x11
00059c e2ed      	LDI  R30,LOW(45)
00059d 8bed      	STD  Y+21,R30
                 _0x2040084:
00059e 89ed      	LDD  R30,Y+21
00059f 30e0      	CPI  R30,0
0005a0 f019      	BREQ _0x2040085
0005a1 5f1f      	SUBI R17,-LOW(1)
0005a2 5f4f      	SUBI R20,-LOW(1)
0005a3 c001      	RJMP _0x2040086
                 _0x2040085:
0005a4 7f0b      	ANDI R16,LOW(251)
                 _0x2040086:
                 _0x2040083:
0005a5 2f34      	MOV  R19,R20
                 _0x204006F:
0005a6 fd00      	SBRC R16,0
0005a7 c013      	RJMP _0x2040087
                 _0x2040088:
0005a8 1715      	CP   R17,R21
0005a9 f410      	BRSH _0x204008B
0005aa 1735      	CP   R19,R21
0005ab f008      	BRLO _0x204008C
                 _0x204008B:
0005ac c00e      	RJMP _0x204008A
                 _0x204008C:
0005ad ff07      	SBRS R16,7
0005ae c008      	RJMP _0x204008D
0005af ff02      	SBRS R16,2
0005b0 c004      	RJMP _0x204008E
0005b1 7f0b      	ANDI R16,LOW(251)
0005b2 892d      	LDD  R18,Y+21
0005b3 5011      	SUBI R17,LOW(1)
0005b4 c001      	RJMP _0x204008F
                 _0x204008E:
0005b5 e320      	LDI  R18,LOW(48)
                 _0x204008F:
0005b6 c001      	RJMP _0x2040090
                 _0x204008D:
0005b7 e220      	LDI  R18,LOW(32)
                 _0x2040090:
0005b8 d2d4      	RCALL SUBOPT_0x2B
0005b9 5051      	SUBI R21,LOW(1)
0005ba cfed      	RJMP _0x2040088
                 _0x204008A:
                 _0x2040087:
                 _0x2040091:
0005bb 1714      	CP   R17,R20
0005bc f480      	BRSH _0x2040093
0005bd 6100      	ORI  R16,LOW(16)
0005be ff02      	SBRS R16,2
0005bf c005      	RJMP _0x2040094
0005c0 d306      	RCALL SUBOPT_0x36
0005c1 f009      	BREQ _0x2040095
0005c2 5051      	SUBI R21,LOW(1)
                 _0x2040095:
0005c3 5011      	SUBI R17,LOW(1)
0005c4 5041      	SUBI R20,LOW(1)
                 _0x2040094:
0005c5 e3e0      	LDI  R30,LOW(48)
0005c6 93ea      	ST   -Y,R30
0005c7 d2da      	RCALL SUBOPT_0x2E
0005c8 3050      	CPI  R21,0
0005c9 f009      	BREQ _0x2040096
0005ca 5051      	SUBI R21,LOW(1)
                 _0x2040096:
0005cb 5041      	SUBI R20,LOW(1)
0005cc cfee      	RJMP _0x2040091
                 _0x2040093:
0005cd 2f31      	MOV  R19,R17
0005ce 89ec      	LDD  R30,Y+20
0005cf 30e0      	CPI  R30,0
0005d0 f4a9      	BRNE _0x2040097
                 _0x2040098:
0005d1 3030      	CPI  R19,0
0005d2 f091      	BREQ _0x204009A
0005d3 ff03      	SBRS R16,3
0005d4 c005      	RJMP _0x204009B
0005d5 85ee      	LDD  R30,Y+14
0005d6 85ff      	LDD  R31,Y+14+1
0005d7 9125      	LPM  R18,Z+
0005d8 d2dd      	RCALL SUBOPT_0x32
0005d9 c005      	RJMP _0x204009C
                 _0x204009B:
0005da 85ae      	LDD  R26,Y+14
0005db 85bf      	LDD  R27,Y+14+1
0005dc 912d      	LD   R18,X+
0005dd 87ae      	STD  Y+14,R26
0005de 87bf      	STD  Y+14+1,R27
                 _0x204009C:
0005df d2ad      	RCALL SUBOPT_0x2B
0005e0 3050      	CPI  R21,0
0005e1 f009      	BREQ _0x204009D
0005e2 5051      	SUBI R21,LOW(1)
                 _0x204009D:
0005e3 5031      	SUBI R19,LOW(1)
0005e4 cfec      	RJMP _0x2040098
                 _0x204009A:
0005e5 c041      	RJMP _0x204009E
                 _0x2040097:
                 _0x20400A0:
0005e6 d2f2      	RCALL SUBOPT_0x37
0005e7 d58f      	RCALL __DIVD21U
0005e8 2f2e      	MOV  R18,R30
0005e9 302a      	CPI  R18,10
0005ea f030      	BRLO _0x20400A2
0005eb ff03      	SBRS R16,3
0005ec c002      	RJMP _0x20400A3
0005ed 5c29      	SUBI R18,-LOW(55)
0005ee c001      	RJMP _0x20400A4
                 _0x20400A3:
0005ef 5a29      	SUBI R18,-LOW(87)
                 _0x20400A4:
0005f0 c001      	RJMP _0x20400A5
                 _0x20400A2:
0005f1 5d20      	SUBI R18,-LOW(48)
                 _0x20400A5:
0005f2 fd04      	SBRC R16,4
0005f3 c01d      	RJMP _0x20400A7
0005f4 3321      	CPI  R18,49
0005f5 f448      	BRSH _0x20400A9
0005f6 d2e7      	RCALL SUBOPT_0x38
                +
0005f7 30a1     +CPI R26 , LOW ( 0x1 )
0005f8 e0e0     +LDI R30 , HIGH ( 0x1 )
0005f9 07be     +CPC R27 , R30
0005fa e0e0     +LDI R30 , BYTE3 ( 0x1 )
0005fb 078e     +CPC R24 , R30
0005fc e0e0     +LDI R30 , BYTE4 ( 0x1 )
0005fd 079e     +CPC R25 , R30
                 	__CPD2N 0x1
0005fe f409      	BRNE _0x20400A8
                 _0x20400A9:
0005ff c00b      	RJMP _0x20400AB
                 _0x20400A8:
000600 1743      	CP   R20,R19
000601 f440      	BRSH _0x2040116
000602 1753      	CP   R21,R19
000603 f010      	BRLO _0x20400AE
000604 ff00      	SBRS R16,0
000605 c001      	RJMP _0x20400AF
                 _0x20400AE:
000606 c00e      	RJMP _0x20400AD
                 _0x20400AF:
000607 e220      	LDI  R18,LOW(32)
000608 ff07      	SBRS R16,7
000609 c007      	RJMP _0x20400B0
                 _0x2040116:
00060a e320      	LDI  R18,LOW(48)
                 _0x20400AB:
00060b 6100      	ORI  R16,LOW(16)
00060c ff02      	SBRS R16,2
00060d c003      	RJMP _0x20400B1
00060e d2b8      	RCALL SUBOPT_0x36
00060f f009      	BREQ _0x20400B2
000610 5051      	SUBI R21,LOW(1)
                 _0x20400B2:
                 _0x20400B1:
                 _0x20400B0:
                 _0x20400A7:
000611 d27b      	RCALL SUBOPT_0x2B
000612 3050      	CPI  R21,0
000613 f009      	BREQ _0x20400B3
000614 5051      	SUBI R21,LOW(1)
                 _0x20400B3:
                 _0x20400AD:
000615 5031      	SUBI R19,LOW(1)
000616 d2c2      	RCALL SUBOPT_0x37
000617 d590      	RCALL __MODD21U
000618 d1dc      	RCALL SUBOPT_0x11
000619 89ec      	LDD  R30,Y+20
00061a d2c3      	RCALL SUBOPT_0x38
00061b 27ff      	CLR  R31
00061c 2766      	CLR  R22
00061d 2777      	CLR  R23
00061e d558      	RCALL __DIVD21U
00061f d2a2      	RCALL SUBOPT_0x35
                +
000620 89e8     +LDD R30 , Y + 16
000621 89f9     +LDD R31 , Y + 16 + 1
000622 896a     +LDD R22 , Y + 16 + 2
000623 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
000624 d5cf      	RCALL __CPD10
000625 f009      	BREQ _0x20400A1
000626 cfbf      	RJMP _0x20400A0
                 _0x20400A1:
                 _0x204009E:
000627 ff00      	SBRS R16,0
000628 c007      	RJMP _0x20400B4
                 _0x20400B5:
000629 3050      	CPI  R21,0
00062a f029      	BREQ _0x20400B7
00062b 5051      	SUBI R21,LOW(1)
00062c e2e0      	LDI  R30,LOW(32)
00062d 93ea      	ST   -Y,R30
00062e d273      	RCALL SUBOPT_0x2E
00062f cff9      	RJMP _0x20400B5
                 _0x20400B7:
                 _0x20400B4:
                 _0x20400B8:
                 _0x2040054:
                 _0x2040114:
000630 e010      	LDI  R17,LOW(0)
                 _0x2040035:
000631 ce50      	RJMP _0x2040030
                 _0x2040032:
000632 d257      	RCALL SUBOPT_0x2A
000633 d584      	RCALL __GETW1P
000634 d5d5      	RCALL __LOADLOCR6
000635 96ef      	ADIW R28,63
000636 966f      	ADIW R28,31
000637 9508      	RET
                 ; .FEND
                 _printf:
                 ; .FSTART _printf
000638 92ff      	PUSH R15
000639 2ef8      	MOV  R15,R24
00063a 9726      	SBIW R28,6
00063b d5cb      	RCALL __SAVELOCR2
00063c 01de      	MOVW R26,R28
00063d 9614      	ADIW R26,4
00063e d509      	RCALL __ADDW2R15
00063f 018d      	MOVW R16,R26
000640 e0e0      	LDI  R30,LOW(0)
000641 83ec      	STD  Y+4,R30
000642 83ed      	STD  Y+4+1,R30
000643 83ee      	STD  Y+6,R30
000644 83ef      	STD  Y+6+1,R30
000645 01de      	MOVW R26,R28
000646 9618      	ADIW R26,8
000647 d500      	RCALL __ADDW2R15
000648 d56f      	RCALL __GETW1P
000649 d15e      	RCALL SUBOPT_0x0
00064a 931a      	ST   -Y,R17
00064b 930a      	ST   -Y,R16
00064c ede4      	LDI  R30,LOW(_put_usart_G102)
00064d e0f3      	LDI  R31,HIGH(_put_usart_G102)
00064e d159      	RCALL SUBOPT_0x0
00064f 01de      	MOVW R26,R28
000650 9618      	ADIW R26,8
000651 de16      	RCALL __print_G102
000652 d5bb      	RCALL __LOADLOCR2
000653 9628      	ADIW R28,8
000654 90ff      	POP  R15
000655 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ds18b20_select:
                 ; .FSTART _ds18b20_select
000656 d15c      	RCALL SUBOPT_0x3
000657 931a      	ST   -Y,R17
000658 d2c3      	RCALL _w1_init
000659 30e0      	CPI  R30,0
00065a f411      	BRNE _0x2060003
00065b e0e0      	LDI  R30,LOW(0)
00065c c06a      	RJMP _0x20E0004
                 _0x2060003:
00065d 81e9      	LDD  R30,Y+1
00065e 81fa      	LDD  R31,Y+1+1
00065f 9730      	SBIW R30,0
000660 f069      	BREQ _0x2060004
000661 e5a5      	LDI  R26,LOW(85)
000662 d2ff      	RCALL _w1_write
000663 e010      	LDI  R17,LOW(0)
                 _0x2060006:
000664 d27e      	RCALL SUBOPT_0x39
000665 91ed      	LD   R30,X+
000666 83a9      	STD  Y+1,R26
000667 83ba      	STD  Y+1+1,R27
000668 2fae      	MOV  R26,R30
000669 d2f8      	RCALL _w1_write
00066a 5f1f      	SUBI R17,-LOW(1)
00066b 3018      	CPI  R17,8
00066c f3b8      	BRLO _0x2060006
00066d c002      	RJMP _0x2060008
                 _0x2060004:
00066e ecac      	LDI  R26,LOW(204)
00066f d2f2      	RCALL _w1_write
                 _0x2060008:
000670 e0e1      	LDI  R30,LOW(1)
000671 c055      	RJMP _0x20E0004
                 ; .FEND
                 _ds18b20_read_spd:
                 ; .FSTART _ds18b20_read_spd
000672 d140      	RCALL SUBOPT_0x3
000673 d591      	RCALL __SAVELOCR4
000674 81ac      	LDD  R26,Y+4
000675 81bd      	LDD  R27,Y+4+1
000676 d26f      	RCALL SUBOPT_0x3A
000677 f411      	BRNE _0x2060009
000678 e0e0      	LDI  R30,LOW(0)
000679 c016      	RJMP _0x20E0006
                 _0x2060009:
00067a ebae      	LDI  R26,LOW(190)
00067b d2e6      	RCALL _w1_write
00067c e010      	LDI  R17,LOW(0)
                +
00067d ef2c     +LDI R18 , LOW ( ___ds18b20_scratch_pad )
00067e e031     +LDI R19 , HIGH ( ___ds18b20_scratch_pad )
                 	__POINTWRM 18,19,___ds18b20_scratch_pad
                 _0x206000B:
00067f 933f      	PUSH R19
000680 932f      	PUSH R18
                +
000681 5f2f     +SUBI R18 , LOW ( - 1 )
000682 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000683 d2d9      	RCALL _w1_read
000684 91af      	POP  R26
000685 91bf      	POP  R27
000686 93ec      	ST   X,R30
000687 5f1f      	SUBI R17,-LOW(1)
000688 3019      	CPI  R17,9
000689 f3a8      	BRLO _0x206000B
00068a efec      	LDI  R30,LOW(___ds18b20_scratch_pad)
00068b e0f1      	LDI  R31,HIGH(___ds18b20_scratch_pad)
00068c d11b      	RCALL SUBOPT_0x0
00068d e0a9      	LDI  R26,LOW(9)
00068e d2dd      	RCALL _w1_dow_crc8
00068f d4cf      	RCALL __LNEGB1
                 _0x20E0006:
000690 d57b      	RCALL __LOADLOCR4
000691 9626      	ADIW R28,6
000692 9508      	RET
                 ; .FEND
                 _ds18b20_temperature:
                 ; .FSTART _ds18b20_temperature
000693 d11f      	RCALL SUBOPT_0x3
000694 931a      	ST   -Y,R17
000695 d24d      	RCALL SUBOPT_0x39
000696 dfdb      	RCALL _ds18b20_read_spd
000697 30e0      	CPI  R30,0
000698 f411      	BRNE _0x206000D
000699 d24f      	RCALL SUBOPT_0x3B
00069a c02c      	RJMP _0x20E0004
                 _0x206000D:
                +
00069b 91e0 0200+LDS R30 , ___ds18b20_scratch_pad + ( 4 )
                 	__GETB1MN ___ds18b20_scratch_pad,4
00069d 95e2      	SWAP R30
00069e 70ef      	ANDI R30,0xF
00069f 95e6      	LSR  R30
0006a0 70e3      	ANDI R30,LOW(0x3)
0006a1 2f1e      	MOV  R17,R30
0006a2 d240      	RCALL SUBOPT_0x39
0006a3 d242      	RCALL SUBOPT_0x3A
0006a4 f411      	BRNE _0x206000E
0006a5 d243      	RCALL SUBOPT_0x3B
0006a6 c020      	RJMP _0x20E0004
                 _0x206000E:
0006a7 e4a4      	LDI  R26,LOW(68)
0006a8 d2b9      	RCALL _w1_write
0006a9 2fe1      	MOV  R30,R17
0006aa e2a6      	LDI  R26,LOW(_conv_delay_G103*2)
0006ab e0b0      	LDI  R27,HIGH(_conv_delay_G103*2)
0006ac d241      	RCALL SUBOPT_0x3C
0006ad d51d      	RCALL __GETW2PF
0006ae d263      	RCALL _delay_ms
0006af d233      	RCALL SUBOPT_0x39
0006b0 dfc1      	RCALL _ds18b20_read_spd
0006b1 30e0      	CPI  R30,0
0006b2 f411      	BRNE _0x206000F
0006b3 d235      	RCALL SUBOPT_0x3B
0006b4 c012      	RJMP _0x20E0004
                 _0x206000F:
0006b5 d266      	RCALL _w1_init
0006b6 2fe1      	MOV  R30,R17
0006b7 e2ae      	LDI  R26,LOW(_bit_mask_G103*2)
0006b8 e0b0      	LDI  R27,HIGH(_bit_mask_G103*2)
0006b9 d234      	RCALL SUBOPT_0x3C
0006ba d50c      	RCALL __GETW1PF
0006bb 91a0 01fc 	LDS  R26,___ds18b20_scratch_pad
0006bd 91b0 01fd 	LDS  R27,___ds18b20_scratch_pad+1
0006bf 23ea      	AND  R30,R26
0006c0 23fb      	AND  R31,R27
0006c1 d11c      	RCALL SUBOPT_0xC
                +
0006c2 e0a0     +LDI R26 , LOW ( 0x3D800000 )
0006c3 e0b0     +LDI R27 , HIGH ( 0x3D800000 )
0006c4 e880     +LDI R24 , BYTE3 ( 0x3D800000 )
0006c5 e39d     +LDI R25 , BYTE4 ( 0x3D800000 )
                 	__GETD2N 0x3D800000
0006c6 d3ce      	RCALL __MULF12
                 _0x20E0004:
0006c7 8118      	LDD  R17,Y+0
                 _0x20E0005:
0006c8 9623      	ADIW R28,3
0006c9 9508      	RET
                 ; .FEND
                 _ds18b20_init:
                 ; .FSTART _ds18b20_init
0006ca 93aa      	ST   -Y,R26
0006cb 81ab      	LDD  R26,Y+3
0006cc 81bc      	LDD  R27,Y+3+1
0006cd d218      	RCALL SUBOPT_0x3A
0006ce f411      	BRNE _0x2060010
0006cf e0e0      	LDI  R30,LOW(0)
0006d0 c032      	RJMP _0x20E0003
                 _0x2060010:
0006d1 81e8      	LD   R30,Y
0006d2 95e2      	SWAP R30
0006d3 7fe0      	ANDI R30,0xF0
0006d4 0fee      	LSL  R30
0006d5 61ef      	ORI  R30,LOW(0x1F)
0006d6 83e8      	ST   Y,R30
0006d7 e4ae      	LDI  R26,LOW(78)
0006d8 d289      	RCALL _w1_write
0006d9 81a9      	LDD  R26,Y+1
0006da d287      	RCALL _w1_write
0006db 81aa      	LDD  R26,Y+2
0006dc d285      	RCALL _w1_write
0006dd 81a8      	LD   R26,Y
0006de d283      	RCALL _w1_write
0006df 81ab      	LDD  R26,Y+3
0006e0 81bc      	LDD  R27,Y+3+1
0006e1 df90      	RCALL _ds18b20_read_spd
0006e2 30e0      	CPI  R30,0
0006e3 f411      	BRNE _0x2060011
0006e4 e0e0      	LDI  R30,LOW(0)
0006e5 c01d      	RJMP _0x20E0003
                 _0x2060011:
                +
0006e6 91a0 01ff+LDS R26 , ___ds18b20_scratch_pad + ( 3 )
                 	__GETB2MN ___ds18b20_scratch_pad,3
0006e8 81ea      	LDD  R30,Y+2
0006e9 17ea      	CP   R30,R26
0006ea f451      	BRNE _0x2060013
                +
0006eb 91a0 01fe+LDS R26 , ___ds18b20_scratch_pad + ( 2 )
                 	__GETB2MN ___ds18b20_scratch_pad,2
0006ed 81e9      	LDD  R30,Y+1
0006ee 17ea      	CP   R30,R26
0006ef f429      	BRNE _0x2060013
                +
0006f0 91a0 0200+LDS R26 , ___ds18b20_scratch_pad + ( 4 )
                 	__GETB2MN ___ds18b20_scratch_pad,4
0006f2 81e8      	LD   R30,Y
0006f3 17ea      	CP   R30,R26
0006f4 f011      	BREQ _0x2060012
                 _0x2060013:
0006f5 e0e0      	LDI  R30,LOW(0)
0006f6 c00c      	RJMP _0x20E0003
                 _0x2060012:
0006f7 81ab      	LDD  R26,Y+3
0006f8 81bc      	LDD  R27,Y+3+1
0006f9 d1ec      	RCALL SUBOPT_0x3A
0006fa f411      	BRNE _0x2060015
0006fb e0e0      	LDI  R30,LOW(0)
0006fc c006      	RJMP _0x20E0003
                 _0x2060015:
0006fd e4a8      	LDI  R26,LOW(72)
0006fe d263      	RCALL _w1_write
0006ff e0af      	LDI  R26,LOW(15)
000700 e0b0      	LDI  R27,0
000701 d210      	RCALL _delay_ms
000702 d219      	RCALL _w1_init
                 _0x20E0003:
000703 9625      	ADIW R28,5
000704 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _strcpyf:
                 ; .FSTART _strcpyf
000705 d0ad      	RCALL SUBOPT_0x3
000706 91e9          ld   r30,y+
000707 91f9          ld   r31,y+
000708 91a9          ld   r26,y+
000709 91b9          ld   r27,y+
00070a 01cd          movw r24,r26
                 strcpyf0:
00070b 9005      	lpm  r0,z+
00070c 920d          st   x+,r0
00070d 2000          tst  r0
00070e f7e1          brne strcpyf0
00070f 01fc          movw r30,r24
000710 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
000711 d0a1      	RCALL SUBOPT_0x3
000712 91a9          ld   r26,y+
000713 91b9          ld   r27,y+
000714 27ee          clr  r30
000715 27ff          clr  r31
                 strlen0:
000716 916d          ld   r22,x+
000717 2366          tst  r22
000718 f011          breq strlen1
000719 9631          adiw r30,1
00071a cffb          rjmp strlen0
                 strlen1:
00071b 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00071c d096      	RCALL SUBOPT_0x3
00071d 27aa          clr  r26
00071e 27bb          clr  r27
00071f 91e9          ld   r30,y+
000720 91f9          ld   r31,y+
                 strlenf0:
000721 9005      	lpm  r0,z+
000722 2000          tst  r0
000723 f011          breq strlenf1
000724 9611          adiw r26,1
000725 cffb          rjmp strlenf0
                 strlenf1:
000726 01fd          movw r30,r26
000727 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
000728 d0f8      	RCALL SUBOPT_0x19
000729 e0e0      	LDI  R30,LOW(0)
00072a 83ea      	STD  Y+2,R30
00072b e3ef      	LDI  R30,LOW(63)
00072c 83eb      	STD  Y+3,R30
00072d d4d9      	RCALL __SAVELOCR2
00072e 85eb      	LDD  R30,Y+11
00072f 85fc      	LDD  R31,Y+11+1
000730 3fef      	CPI  R30,LOW(0xFFFF)
000731 efaf      	LDI  R26,HIGH(0xFFFF)
000732 07fa      	CPC  R31,R26
000733 f429      	BRNE _0x20A000D
000734 d1bf      	RCALL SUBOPT_0x3D
                +
000735 eea4     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 0 ) )
000736 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 0 ) )
                 	__POINTW2FN _0x20A0000,0
000737 dfcd      	RCALL _strcpyf
000738 c06c      	RJMP _0x20E0002
                 _0x20A000D:
000739 3fef      	CPI  R30,LOW(0x7FFF)
00073a e7af      	LDI  R26,HIGH(0x7FFF)
00073b 07fa      	CPC  R31,R26
00073c f429      	BRNE _0x20A000C
00073d d1b6      	RCALL SUBOPT_0x3D
                +
00073e eea5     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 1 ) )
00073f e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 1 ) )
                 	__POINTW2FN _0x20A0000,1
000740 dfc4      	RCALL _strcpyf
000741 c063      	RJMP _0x20E0002
                 _0x20A000C:
000742 85ac      	LDD  R26,Y+12
000743 23aa      	TST  R26
000744 f432      	BRPL _0x20A000F
000745 d1b1      	RCALL SUBOPT_0x3E
000746 d258      	RCALL __ANEGF1
000747 d1b4      	RCALL SUBOPT_0x3F
000748 d1b8      	RCALL SUBOPT_0x40
000749 e2ed      	LDI  R30,LOW(45)
00074a 93ec      	ST   X,R30
                 _0x20A000F:
00074b 85a8      	LDD  R26,Y+8
00074c 30a7      	CPI  R26,LOW(0x7)
00074d f010      	BRLO _0x20A0010
00074e e0e6      	LDI  R30,LOW(6)
00074f 87e8      	STD  Y+8,R30
                 _0x20A0010:
000750 8518      	LDD  R17,Y+8
                 _0x20A0011:
000751 d0d8      	RCALL SUBOPT_0x1B
000752 f021      	BREQ _0x20A0013
000753 d0ab      	RCALL SUBOPT_0x13
000754 d119      	RCALL SUBOPT_0x25
000755 d0a4      	RCALL SUBOPT_0x12
000756 cffa      	RJMP _0x20A0011
                 _0x20A0013:
000757 d1af      	RCALL SUBOPT_0x41
000758 d2ec      	RCALL __ADDF12
000759 d1a2      	RCALL SUBOPT_0x3F
00075a e010      	LDI  R17,LOW(0)
00075b d094      	RCALL SUBOPT_0x10
00075c d09d      	RCALL SUBOPT_0x12
                 _0x20A0014:
00075d d1a9      	RCALL SUBOPT_0x41
00075e d3c9      	RCALL __CMPF12
00075f f060      	BRLO _0x20A0016
000760 d09e      	RCALL SUBOPT_0x13
000761 d0f6      	RCALL SUBOPT_0x21
000762 d097      	RCALL SUBOPT_0x12
000763 5f1f      	SUBI R17,-LOW(1)
000764 3217      	CPI  R17,39
000765 f028      	BRLO _0x20A0017
000766 d18d      	RCALL SUBOPT_0x3D
                +
000767 eea9     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 5 ) )
000768 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 5 ) )
                 	__POINTW2FN _0x20A0000,5
000769 df9b      	RCALL _strcpyf
00076a c03a      	RJMP _0x20E0002
                 _0x20A0017:
00076b cff1      	RJMP _0x20A0014
                 _0x20A0016:
00076c 3010      	CPI  R17,0
00076d f421      	BRNE _0x20A0018
00076e d192      	RCALL SUBOPT_0x40
00076f e3e0      	LDI  R30,LOW(48)
000770 93ec      	ST   X,R30
000771 c016      	RJMP _0x20A0019
                 _0x20A0018:
                 _0x20A001A:
000772 d0b7      	RCALL SUBOPT_0x1B
000773 f0a1      	BREQ _0x20A001C
000774 d08a      	RCALL SUBOPT_0x13
000775 d0f8      	RCALL SUBOPT_0x25
000776 d0ec      	RCALL SUBOPT_0x23
000777 d038      	RCALL SUBOPT_0x2
000778 db52      	RCALL _floor
000779 d080      	RCALL SUBOPT_0x12
00077a d18c      	RCALL SUBOPT_0x41
00077b d367      	RCALL __DIVF21
00077c d255      	RCALL __CFD1U
00077d 2f0e      	MOV  R16,R30
00077e d182      	RCALL SUBOPT_0x40
00077f d0fb      	RCALL SUBOPT_0x27
000780 e0f0      	LDI  R31,0
000781 d07d      	RCALL SUBOPT_0x13
000782 d05b      	RCALL SUBOPT_0xC
000783 d311      	RCALL __MULF12
000784 d188      	RCALL SUBOPT_0x42
000785 d050      	RCALL SUBOPT_0xA
000786 d175      	RCALL SUBOPT_0x3F
000787 cfea      	RJMP _0x20A001A
                 _0x20A001C:
                 _0x20A0019:
000788 85e8      	LDD  R30,Y+8
000789 30e0      	CPI  R30,0
00078a f0b1      	BREQ _0x20E0001
00078b d175      	RCALL SUBOPT_0x40
00078c e2ee      	LDI  R30,LOW(46)
00078d 93ec      	ST   X,R30
                 _0x20A001E:
00078e 85e8      	LDD  R30,Y+8
00078f 50e1      	SUBI R30,LOW(1)
000790 87e8      	STD  Y+8,R30
000791 5fef      	SUBI R30,-LOW(1)
000792 f071      	BREQ _0x20A0020
000793 d179      	RCALL SUBOPT_0x42
000794 d0c3      	RCALL SUBOPT_0x21
000795 d166      	RCALL SUBOPT_0x3F
000796 d160      	RCALL SUBOPT_0x3E
000797 d23a      	RCALL __CFD1U
000798 2f0e      	MOV  R16,R30
000799 d167      	RCALL SUBOPT_0x40
00079a d0e0      	RCALL SUBOPT_0x27
00079b e0f0      	LDI  R31,0
00079c d170      	RCALL SUBOPT_0x42
00079d d040      	RCALL SUBOPT_0xC
00079e d037      	RCALL SUBOPT_0xA
00079f d15c      	RCALL SUBOPT_0x3F
0007a0 cfed      	RJMP _0x20A001E
                 _0x20A0020:
                 _0x20E0001:
0007a1 81ae      	LDD  R26,Y+6
0007a2 81bf      	LDD  R27,Y+6+1
0007a3 e0e0      	LDI  R30,LOW(0)
0007a4 93ec      	ST   X,R30
                 _0x20E0002:
0007a5 d468      	RCALL __LOADLOCR2
0007a6 962d      	ADIW R28,13
0007a7 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _twi_tx_index:
0001f9           	.BYTE 0x1
                 _twi_rx_index:
0001fa           	.BYTE 0x1
                 _twi_result:
0001fb           	.BYTE 0x1
                 ___ds18b20_scratch_pad:
0001fc           	.BYTE 0x9
                 _temp:
000205           	.BYTE 0x4
                 _slave_address_G100:
000209           	.BYTE 0x1
                 _twi_tx_buffer_G100:
00020a           	.BYTE 0x2
                 _bytes_to_tx_G100:
00020c           	.BYTE 0x1
                 _twi_rx_buffer_G100:
00020d           	.BYTE 0x2
                 _bytes_to_rx_G100:
00020f           	.BYTE 0x1
                 _twi_rx_buffer_size_G100:
000210           	.BYTE 0x1
                 _twi_slave_rx_handler_G100:
000211           	.BYTE 0x2
                 _twi_slave_tx_handler_G100:
000213           	.BYTE 0x2
                 __seed_G105:
000215           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x0:
0007a8 93fa      	ST   -Y,R31
0007a9 93ea      	ST   -Y,R30
0007aa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
0007ab 27ff      	CLR  R31
0007ac 2766      	CLR  R22
0007ad 2777      	CLR  R23
0007ae d25c      	RCALL __CDF1
0007af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2:
0007b0 01df      	MOVW R26,R30
0007b1 01cb      	MOVW R24,R22
0007b2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x3:
0007b3 93ba      	ST   -Y,R27
0007b4 93aa      	ST   -Y,R26
0007b5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x4:
0007b6 d417      	RCALL __GETD1S0
0007b7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x5:
                +
0007b8 e0a0     +LDI R26 , LOW ( 0x3F800000 )
0007b9 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
0007ba e880     +LDI R24 , BYTE3 ( 0x3F800000 )
0007bb e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
0007bc d281      	RCALL __SUBF12
0007bd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x6:
                +
0007be 81ae     +LDD R26 , Y + 6
0007bf 81bf     +LDD R27 , Y + 6 + 1
0007c0 8588     +LDD R24 , Y + 6 + 2
0007c1 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
0007c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x7:
                +
0007c3 81ee     +LDD R30 , Y + 6
0007c4 81ff     +LDD R31 , Y + 6 + 1
0007c5 8568     +LDD R22 , Y + 6 + 2
0007c6 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
0007c7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x8:
                +
0007c8 83ee     +STD Y + 6 , R30
0007c9 83ff     +STD Y + 6 + 1 , R31
0007ca 8768     +STD Y + 6 + 2 , R22
0007cb 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
0007cc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x9:
0007cd dffa      	RCALL SUBOPT_0x8
0007ce dff4      	RCALL SUBOPT_0x7
0007cf dfee      	RCALL SUBOPT_0x6
0007d0 d2c4      	RCALL __MULF12
                +
0007d1 83ea     +STD Y + 2 , R30
0007d2 83fb     +STD Y + 2 + 1 , R31
0007d3 836c     +STD Y + 2 + 2 , R22
0007d4 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
0007d5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA:
0007d6 d410      	RCALL __SWAPD12
0007d7 d266      	RCALL __SUBF12
0007d8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xB:
                +
0007d9 81ea     +LDD R30 , Y + 2
0007da 81fb     +LDD R31 , Y + 2 + 1
0007db 816c     +LDD R22 , Y + 2 + 2
0007dc 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
0007dd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xC:
0007de d37b      	RCALL __CWD1
0007df d22b      	RCALL __CDF1
0007e0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0xD:
                +
0007e1 85aa     +LDD R26 , Y + 10
0007e2 85bb     +LDD R27 , Y + 10 + 1
0007e3 858c     +LDD R24 , Y + 10 + 2
0007e4 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
0007e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xE:
                +
0007e6 e0e0     +LDI R30 , LOW ( 0x0 )
0007e7 e0f0     +LDI R31 , HIGH ( 0x0 )
0007e8 e060     +LDI R22 , BYTE3 ( 0x0 )
0007e9 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
0007ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0xF:
                +
0007eb 85ea     +LDD R30 , Y + 10
0007ec 85fb     +LDD R31 , Y + 10 + 1
0007ed 856c     +LDD R22 , Y + 10 + 2
0007ee 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
0007ef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x10:
                +
0007f0 e0e0     +LDI R30 , LOW ( 0x3F800000 )
0007f1 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
0007f2 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
0007f3 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
0007f4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x11:
                +
0007f5 87ea     +STD Y + 10 , R30
0007f6 87fb     +STD Y + 10 + 1 , R31
0007f7 876c     +STD Y + 10 + 2 , R22
0007f8 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0007f9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x12:
                +
0007fa 83ea     +STD Y + 2 , R30
0007fb 83fb     +STD Y + 2 + 1 , R31
0007fc 836c     +STD Y + 2 + 2 , R22
0007fd 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
0007fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x13:
                +
0007ff 81aa     +LDD R26 , Y + 2
000800 81bb     +LDD R27 , Y + 2 + 1
000801 818c     +LDD R24 , Y + 2 + 2
000802 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000803 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x14:
                +
000804 85e8     +LDD R30 , Y + 8
000805 85f9     +LDD R31 , Y + 8 + 1
000806 856a     +LDD R22 , Y + 8 + 2
000807 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
000808 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15:
                +
000809 85a8     +LDD R26 , Y + 8
00080a 85b9     +LDD R27 , Y + 8 + 1
00080b 858a     +LDD R24 , Y + 8 + 2
00080c 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
00080d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x16:
                +
00080e 81ec     +LDD R30 , Y + 4
00080f 81fd     +LDD R31 , Y + 4 + 1
000810 816e     +LDD R22 , Y + 4 + 2
000811 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
000812 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x17:
000813 dac3      	RCALL _log
                +
000814 81ac     +LDD R26 , Y + 4
000815 81bd     +LDD R27 , Y + 4 + 1
000816 818e     +LDD R24 , Y + 4 + 2
000817 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000818 d27c      	RCALL __MULF12
000819 df96      	RCALL SUBOPT_0x2
00081a cb20      	RJMP _exp
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x18:
00081b 91ed      	LD   R30,X+
00081c 91fd      	LD   R31,X+
00081d 9631      	ADIW R30,1
00081e 93fe      	ST   -X,R31
00081f 93ee      	ST   -X,R30
000820 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x19:
000821 df91      	RCALL SUBOPT_0x3
000822 9724      	SBIW R28,4
000823 e0e0      	LDI  R30,LOW(0)
000824 83e8      	ST   Y,R30
000825 83e9      	STD  Y+1,R30
000826 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1A:
000827 85e8      	LDD  R30,Y+8
000828 85f9      	LDD  R31,Y+8+1
000829 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1B:
00082a 2fe1      	MOV  R30,R17
00082b 5011      	SUBI R17,1
00082c 30e0      	CPI  R30,0
00082d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:34 WORDS
                 SUBOPT_0x1C:
                +
00082e 81ac     +LDD R26 , Y + 4
00082f 81bd     +LDD R27 , Y + 4 + 1
000830 818e     +LDD R24 , Y + 4 + 2
000831 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000832 e0e0     +LDI R30 , LOW ( 0x41200000 )
000833 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000834 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000835 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000836 d25e      	RCALL __MULF12
                +
000837 83ec     +STD Y + 4 , R30
000838 83fd     +STD Y + 4 + 1 , R31
000839 836e     +STD Y + 4 + 2 , R22
00083a 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
00083b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1D:
                +
00083c 85ec     +LDD R30 , Y + 12
00083d 85fd     +LDD R31 , Y + 12 + 1
00083e 856e     +LDD R22 , Y + 12 + 2
00083f 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000840 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1E:
000841 dfcc      	RCALL SUBOPT_0x16
                +
000842 85ac     +LDD R26 , Y + 12
000843 85bd     +LDD R27 , Y + 12 + 1
000844 858e     +LDD R24 , Y + 12 + 2
000845 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000846 d2e1      	RCALL __CMPF12
000847 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x1F:
                +
000848 85ac     +LDD R26 , Y + 12
000849 85bd     +LDD R27 , Y + 12 + 1
00084a 858e     +LDD R24 , Y + 12 + 2
00084b 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
00084c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x20:
                +
00084d eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00084e ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00084f ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000850 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000851 d243      	RCALL __MULF12
                +
000852 87ec     +STD Y + 12 , R30
000853 87fd     +STD Y + 12 + 1 , R31
000854 876e     +STD Y + 12 + 2 , R22
000855 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000856 5f3f      	SUBI R19,-LOW(1)
000857 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x21:
                +
000858 e0e0     +LDI R30 , LOW ( 0x41200000 )
000859 e0f0     +LDI R31 , HIGH ( 0x41200000 )
00085a e260     +LDI R22 , BYTE3 ( 0x41200000 )
00085b e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00085c d238      	RCALL __MULF12
00085d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x22:
                +
00085e 87ec     +STD Y + 12 , R30
00085f 87fd     +STD Y + 12 + 1 , R31
000860 876e     +STD Y + 12 + 2 , R22
000861 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000862 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x23:
                +
000863 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000864 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000865 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000866 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000867 d1dd      	RCALL __ADDF12
000868 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24:
                +
000869 81ac     +LDD R26 , Y + 4
00086a 81bd     +LDD R27 , Y + 4 + 1
00086b 818e     +LDD R24 , Y + 4 + 2
00086c 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
00086d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x25:
                +
00086e eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00086f ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000870 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000871 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000872 d222      	RCALL __MULF12
000873 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x26:
000874 85a8      	LDD  R26,Y+8
000875 85b9      	LDD  R27,Y+8+1
000876 9611      	ADIW R26,1
000877 87a8      	STD  Y+8,R26
000878 87b9      	STD  Y+8+1,R27
000879 9711      	SBIW R26,1
00087a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x27:
00087b 2fe0      	MOV  R30,R16
00087c 5de0      	SUBI R30,-LOW(48)
00087d 93ec      	ST   X,R30
00087e 2fe0      	MOV  R30,R16
00087f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x28:
000880 dfa6      	RCALL SUBOPT_0x1A
000881 9631      	ADIW R30,1
000882 87e8      	STD  Y+8,R30
000883 87f9      	STD  Y+8+1,R31
000884 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29:
000885 9731      	SBIW R30,1
000886 01bf      	MOVW R22,R30
000887 2fa3      	MOV  R26,R19
000888 e0ea      	LDI  R30,LOW(10)
000889 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2A:
00088a 81ae      	LDD  R26,Y+6
00088b 81bf      	LDD  R27,Y+6+1
00088c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x2B:
00088d 932a      	ST   -Y,R18
00088e 81af      	LDD  R26,Y+7
00088f 85b8      	LDD  R27,Y+7+1
000890 85e9      	LDD  R30,Y+9
000891 85fa      	LDD  R31,Y+9+1
000892 9509      	ICALL
000893 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2C:
                +
000894 01fe     +MOVW R30 , R28
000895 5ae6     +SUBI R30 , LOW ( - 90 )
000896 4fff     +SBCI R31 , HIGH ( - 90 )
000897 9001     +LD R0 , Z +
000898 81f0     +LD R31 , Z
000899 2de0     +MOV R30 , R0
                 	__GETW1SX 90
00089a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:28 WORDS
                 SUBOPT_0x2D:
00089b 9734      	SBIW R30,4
                +
00089c 01de     +MOVW R26 , R28
00089d 5aa6     +SUBI R26 , LOW ( - 90 )
00089e 4fbf     +SBCI R27 , HIGH ( - 90 )
00089f 93ed     +ST X + , R30
0008a0 93fc     +ST X , R31
                 	__PUTW1SX 90
0008a1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x2E:
0008a2 81af      	LDD  R26,Y+7
0008a3 85b8      	LDD  R27,Y+7+1
0008a4 85e9      	LDD  R30,Y+9
0008a5 85fa      	LDD  R31,Y+9+1
0008a6 9509      	ICALL
0008a7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2F:
0008a8 01fe      	MOVW R30,R28
0008a9 9676      	ADIW R30,22
0008aa 87ee      	STD  Y+14,R30
0008ab 87ff      	STD  Y+14+1,R31
0008ac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:23 WORDS
                 SUBOPT_0x30:
                +
0008ad 01de     +MOVW R26 , R28
0008ae 5aa6     +SUBI R26 , LOW ( - 90 )
0008af 4fbf     +SBCI R27 , HIGH ( - 90 )
0008b0 900d     +LD R0 , X +
0008b1 91bc     +LD R27 , X
0008b2 2da0     +MOV R26 , R0
                 	__GETW2SX 90
0008b3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x31:
0008b4 dfdf      	RCALL SUBOPT_0x2C
0008b5 cfe5      	RJMP SUBOPT_0x2D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x32:
0008b6 87ee      	STD  Y+14,R30
0008b7 87ff      	STD  Y+14+1,R31
0008b8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x33:
0008b9 85ae      	LDD  R26,Y+14
0008ba 85bf      	LDD  R27,Y+14+1
0008bb de55      	RCALL _strlen
0008bc 2f1e      	MOV  R17,R30
0008bd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x34:
0008be dfee      	RCALL SUBOPT_0x30
0008bf 9614      	ADIW R26,4
0008c0 d2f7      	RCALL __GETW1P
0008c1 cff4      	RJMP SUBOPT_0x32
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x35:
                +
0008c2 8be8     +STD Y + 16 , R30
0008c3 8bf9     +STD Y + 16 + 1 , R31
0008c4 8b6a     +STD Y + 16 + 2 , R22
0008c5 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
0008c6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x36:
0008c7 7f0b      	ANDI R16,LOW(251)
0008c8 89ed      	LDD  R30,Y+21
0008c9 93ea      	ST   -Y,R30
                +
0008ca 01de     +MOVW R26 , R28
0008cb 5aa9     +SUBI R26 , LOW ( - 87 )
0008cc 4fbf     +SBCI R27 , HIGH ( - 87 )
0008cd 900d     +LD R0 , X +
0008ce 91bc     +LD R27 , X
0008cf 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
0008d0 01fe     +MOVW R30 , R28
0008d1 5ae7     +SUBI R30 , LOW ( - 89 )
0008d2 4fff     +SBCI R31 , HIGH ( - 89 )
0008d3 9001     +LD R0 , Z +
0008d4 81f0     +LD R31 , Z
0008d5 2de0     +MOV R30 , R0
                 	__GETW1SX 89
0008d6 9509      	ICALL
0008d7 3050      	CPI  R21,0
0008d8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x37:
                +
0008d9 89e8     +LDD R30 , Y + 16
0008da 89f9     +LDD R31 , Y + 16 + 1
0008db 896a     +LDD R22 , Y + 16 + 2
0008dc 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
0008dd cf03      	RJMP SUBOPT_0xD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x38:
                +
0008de 89a8     +LDD R26 , Y + 16
0008df 89b9     +LDD R27 , Y + 16 + 1
0008e0 898a     +LDD R24 , Y + 16 + 2
0008e1 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
0008e2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x39:
0008e3 81a9      	LDD  R26,Y+1
0008e4 81ba      	LDD  R27,Y+1+1
0008e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A:
0008e6 dd6f      	RCALL _ds18b20_select
0008e7 30e0      	CPI  R30,0
0008e8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3B:
                +
0008e9 e0e0     +LDI R30 , LOW ( 0xC61C3C00 )
0008ea e3fc     +LDI R31 , HIGH ( 0xC61C3C00 )
0008eb e16c     +LDI R22 , BYTE3 ( 0xC61C3C00 )
0008ec ec76     +LDI R23 , BYTE4 ( 0xC61C3C00 )
                 	__GETD1N 0xC61C3C00
0008ed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3C:
0008ee e0f0      	LDI  R31,0
0008ef 0fee      	LSL  R30
0008f0 1fff      	ROL  R31
0008f1 0fea      	ADD  R30,R26
0008f2 1ffb      	ADC  R31,R27
0008f3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3D:
0008f4 81ee      	LDD  R30,Y+6
0008f5 81ff      	LDD  R31,Y+6+1
0008f6 ceb1      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3E:
                +
0008f7 85e9     +LDD R30 , Y + 9
0008f8 85fa     +LDD R31 , Y + 9 + 1
0008f9 856b     +LDD R22 , Y + 9 + 2
0008fa 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0008fb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x3F:
                +
0008fc 87e9     +STD Y + 9 , R30
0008fd 87fa     +STD Y + 9 + 1 , R31
0008fe 876b     +STD Y + 9 + 2 , R22
0008ff 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000900 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x40:
000901 df88      	RCALL SUBOPT_0x2A
000902 9611      	ADIW R26,1
000903 83ae      	STD  Y+6,R26
000904 83bf      	STD  Y+6+1,R27
000905 9711      	SBIW R26,1
000906 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x41:
000907 ded1      	RCALL SUBOPT_0xB
                +
000908 85a9     +LDD R26 , Y + 9
000909 85ba     +LDD R27 , Y + 9 + 1
00090a 858b     +LDD R24 , Y + 9 + 2
00090b 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00090c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x42:
                +
00090d 85a9     +LDD R26 , Y + 9
00090e 85ba     +LDD R27 , Y + 9 + 1
00090f 858b     +LDD R24 , Y + 9 + 2
000910 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000911 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000912 9610      	adiw r26,0
000913 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000914 ed80     +LDI R24 , LOW ( 0x7D0 )
000915 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000916 9701     +SBIW R24 , 1
000917 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000918 95a8      	wdr
000919 9711      	sbiw r26,1
00091a f7c9      	brne __delay_ms0
                 __delay_ms1:
00091b 9508      	ret
                 
                 	.equ __w1_port=0x15
                 	.equ __w1_bit=0x00
                 
                 _w1_init:
00091c 27ee      	clr  r30
00091d 98a8      	cbi  __w1_port,__w1_bit
00091e 9aa0      	sbi  __w1_port-1,__w1_bit
                +
00091f ec80     +LDI R24 , LOW ( 0x3C0 )
000920 e093     +LDI R25 , HIGH ( 0x3C0 )
                +__DELAY_USW_LOOP :
000921 9701     +SBIW R24 , 1
000922 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x3C0
000923 98a0      	cbi  __w1_port-1,__w1_bit
                +
000924 e285     +LDI R24 , LOW ( 0x25 )
                +__DELAY_USB_LOOP :
000925 958a     +DEC R24
000926 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0x25
000927 9b98      	sbis __w1_port-2,__w1_bit
000928 9508      	ret
                +
000929 ec8b     +LDI R24 , LOW ( 0xCB )
                +__DELAY_USB_LOOP :
00092a 958a     +DEC R24
00092b f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0xCB
00092c 9b98      	sbis __w1_port-2,__w1_bit
00092d e0e1      	ldi  r30,1
                +
00092e e08c     +LDI R24 , LOW ( 0x30C )
00092f e093     +LDI R25 , HIGH ( 0x30C )
                +__DELAY_USW_LOOP :
000930 9701     +SBIW R24 , 1
000931 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x30C
000932 9508      	ret
                 
                 __w1_read_bit:
000933 9aa0      	sbi  __w1_port-1,__w1_bit
                +
000934 e085     +LDI R24 , LOW ( 0x5 )
                +__DELAY_USB_LOOP :
000935 958a     +DEC R24
000936 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0x5
000937 98a0      	cbi  __w1_port-1,__w1_bit
                +
000938 e18d     +LDI R24 , LOW ( 0x1D )
                +__DELAY_USB_LOOP :
000939 958a     +DEC R24
00093a f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0x1D
00093b 9488      	clc
00093c 9998      	sbic __w1_port-2,__w1_bit
00093d 9408      	sec
00093e 95e7      	ror  r30
                +
00093f ed85     +LDI R24 , LOW ( 0xD5 )
                +__DELAY_USB_LOOP :
000940 958a     +DEC R24
000941 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0xD5
000942 9508      	ret
                 
                 __w1_write_bit:
000943 94e8      	clt
000944 9aa0      	sbi  __w1_port-1,__w1_bit
                +
000945 e085     +LDI R24 , LOW ( 0x5 )
                +__DELAY_USB_LOOP :
000946 958a     +DEC R24
000947 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0x5
000948 fd70      	sbrc r23,0
000949 98a0      	cbi  __w1_port-1,__w1_bit
                +
00094a e283     +LDI R24 , LOW ( 0x23 )
                +__DELAY_USB_LOOP :
00094b 958a     +DEC R24
00094c f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0x23
00094d 9998      	sbic __w1_port-2,__w1_bit
00094e c003      	rjmp __w1_write_bit0
00094f ff70      	sbrs r23,0
000950 c003      	rjmp __w1_write_bit1
000951 9508      	ret
                 __w1_write_bit0:
000952 ff70      	sbrs r23,0
000953 9508      	ret
                 __w1_write_bit1:
                +
000954 ec88     +LDI R24 , LOW ( 0xC8 )
                +__DELAY_USB_LOOP :
000955 958a     +DEC R24
000956 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0xC8
000957 98a0      	cbi  __w1_port-1,__w1_bit
                +
000958 e08d     +LDI R24 , LOW ( 0xD )
                +__DELAY_USB_LOOP :
000959 958a     +DEC R24
00095a f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0xD
00095b 9468      	set
00095c 9508      	ret
                 
                 _w1_read:
00095d e068      	ldi  r22,8
                 	__w1_read0:
00095e dfd4      	rcall __w1_read_bit
00095f 956a      	dec  r22
000960 f7e9      	brne __w1_read0
000961 9508      	ret
                 
                 _w1_write:
000962 2f7a      	mov  r23,r26
000963 e068      	ldi  r22,8
000964 27ee      	clr  r30
                 __w1_write0:
000965 dfdd      	rcall __w1_write_bit
000966 f426      	brtc __w1_write1
000967 9577      	ror  r23
000968 956a      	dec  r22
000969 f7d9      	brne __w1_write0
00096a 95e3      	inc  r30
                 __w1_write1:
00096b 9508      	ret
                 
                 _w1_dow_crc8:
00096c 27ee      	clr  r30
00096d 23aa      	tst  r26
00096e f089      	breq __w1_dow_crc83
00096f 2f8a      	mov  r24,r26
000970 e168      	ldi  r22,0x18
000971 81a8      	ld   r26,y
000972 81b9      	ldd  r27,y+1
                 __w1_dow_crc80:
000973 e098      	ldi  r25,8
000974 91fd      	ld   r31,x+
                 __w1_dow_crc81:
000975 2f7f      	mov  r23,r31
000976 277e      	eor  r23,r30
000977 9577      	ror  r23
000978 f408      	brcc __w1_dow_crc82
000979 27e6      	eor  r30,r22
                 __w1_dow_crc82:
00097a 95e7      	ror  r30
00097b 95f6      	lsr  r31
00097c 959a      	dec  r25
00097d f7b9      	brne __w1_dow_crc81
00097e 958a      	dec  r24
00097f f799      	brne __w1_dow_crc80
                 __w1_dow_crc83:
000980 9622      	adiw r28,2
000981 9508      	ret
                 
                 _frexp:
000982 91e9      	LD   R30,Y+
000983 91f9      	LD   R31,Y+
000984 9169      	LD   R22,Y+
000985 9179      	LD   R23,Y+
000986 fb77      	BST  R23,7
000987 0f66      	LSL  R22
000988 1f77      	ROL  R23
000989 2788      	CLR  R24
00098a 577e      	SUBI R23,0x7E
00098b 0b88      	SBC  R24,R24
00098c 937d      	ST   X+,R23
00098d 938c      	ST   X,R24
00098e e77e      	LDI  R23,0x7E
00098f 9576      	LSR  R23
000990 9567      	ROR  R22
000991 f06e      	BRTS __ANEGF1
000992 9508      	RET
                 
                 _ldexp:
000993 91e9      	LD   R30,Y+
000994 91f9      	LD   R31,Y+
000995 9169      	LD   R22,Y+
000996 9179      	LD   R23,Y+
000997 fb77      	BST  R23,7
000998 0f66      	LSL  R22
000999 1f77      	ROL  R23
00099a 0f7a      	ADD  R23,R26
00099b 9576      	LSR  R23
00099c 9567      	ROR  R22
00099d f00e      	BRTS __ANEGF1
00099e 9508      	RET
                 
                 __ANEGF1:
00099f 9730      	SBIW R30,0
0009a0 4060      	SBCI R22,0
0009a1 4070      	SBCI R23,0
0009a2 f009      	BREQ __ANEGF10
0009a3 5870      	SUBI R23,0x80
                 __ANEGF10:
0009a4 9508      	RET
                 
                 __ROUND_REPACK:
0009a5 2355      	TST  R21
0009a6 f442      	BRPL __REPACK
0009a7 3850      	CPI  R21,0x80
0009a8 f411      	BRNE __ROUND_REPACK0
0009a9 ffe0      	SBRS R30,0
0009aa c004      	RJMP __REPACK
                 __ROUND_REPACK0:
0009ab 9631      	ADIW R30,1
0009ac 1f69      	ADC  R22,R25
0009ad 1f79      	ADC  R23,R25
0009ae f06b      	BRVS __REPACK1
                 
                 __REPACK:
0009af e850      	LDI  R21,0x80
0009b0 2757      	EOR  R21,R23
0009b1 f411      	BRNE __REPACK0
0009b2 935f      	PUSH R21
0009b3 c0cf      	RJMP __ZERORES
                 __REPACK0:
0009b4 3f5f      	CPI  R21,0xFF
0009b5 f031      	BREQ __REPACK1
0009b6 0f66      	LSL  R22
0009b7 0c00      	LSL  R0
0009b8 9557      	ROR  R21
0009b9 9567      	ROR  R22
0009ba 2f75      	MOV  R23,R21
0009bb 9508      	RET
                 __REPACK1:
0009bc 935f      	PUSH R21
0009bd 2000      	TST  R0
0009be f00a      	BRMI __REPACK2
0009bf c0cf      	RJMP __MAXRES
                 __REPACK2:
0009c0 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
0009c1 e850      	LDI  R21,0x80
0009c2 2e19      	MOV  R1,R25
0009c3 2215      	AND  R1,R21
0009c4 0f88      	LSL  R24
0009c5 1f99      	ROL  R25
0009c6 2795      	EOR  R25,R21
0009c7 0f55      	LSL  R21
0009c8 9587      	ROR  R24
                 
                 __UNPACK1:
0009c9 e850      	LDI  R21,0x80
0009ca 2e07      	MOV  R0,R23
0009cb 2205      	AND  R0,R21
0009cc 0f66      	LSL  R22
0009cd 1f77      	ROL  R23
0009ce 2775      	EOR  R23,R21
0009cf 0f55      	LSL  R21
0009d0 9567      	ROR  R22
0009d1 9508      	RET
                 
                 __CFD1U:
0009d2 9468      	SET
0009d3 c001      	RJMP __CFD1U0
                 __CFD1:
0009d4 94e8      	CLT
                 __CFD1U0:
0009d5 935f      	PUSH R21
0009d6 dff2      	RCALL __UNPACK1
0009d7 3870      	CPI  R23,0x80
0009d8 f018      	BRLO __CFD10
0009d9 3f7f      	CPI  R23,0xFF
0009da f408      	BRCC __CFD10
0009db c0a7      	RJMP __ZERORES
                 __CFD10:
0009dc e156      	LDI  R21,22
0009dd 1b57      	SUB  R21,R23
0009de f4aa      	BRPL __CFD11
0009df 9551      	NEG  R21
0009e0 3058      	CPI  R21,8
0009e1 f40e      	BRTC __CFD19
0009e2 3059      	CPI  R21,9
                 __CFD19:
0009e3 f030      	BRLO __CFD17
0009e4 efef      	SER  R30
0009e5 efff      	SER  R31
0009e6 ef6f      	SER  R22
0009e7 e77f      	LDI  R23,0x7F
0009e8 f977      	BLD  R23,7
0009e9 c01a      	RJMP __CFD15
                 __CFD17:
0009ea 2777      	CLR  R23
0009eb 2355      	TST  R21
0009ec f0b9      	BREQ __CFD15
                 __CFD18:
0009ed 0fee      	LSL  R30
0009ee 1fff      	ROL  R31
0009ef 1f66      	ROL  R22
0009f0 1f77      	ROL  R23
0009f1 955a      	DEC  R21
0009f2 f7d1      	BRNE __CFD18
0009f3 c010      	RJMP __CFD15
                 __CFD11:
0009f4 2777      	CLR  R23
                 __CFD12:
0009f5 3058      	CPI  R21,8
0009f6 f028      	BRLO __CFD13
0009f7 2fef      	MOV  R30,R31
0009f8 2ff6      	MOV  R31,R22
0009f9 2f67      	MOV  R22,R23
0009fa 5058      	SUBI R21,8
0009fb cff9      	RJMP __CFD12
                 __CFD13:
0009fc 2355      	TST  R21
0009fd f031      	BREQ __CFD15
                 __CFD14:
0009fe 9576      	LSR  R23
0009ff 9567      	ROR  R22
000a00 95f7      	ROR  R31
000a01 95e7      	ROR  R30
000a02 955a      	DEC  R21
000a03 f7d1      	BRNE __CFD14
                 __CFD15:
000a04 2000      	TST  R0
000a05 f40a      	BRPL __CFD16
000a06 d145      	RCALL __ANEGD1
                 __CFD16:
000a07 915f      	POP  R21
000a08 9508      	RET
                 
                 __CDF1U:
000a09 9468      	SET
000a0a c001      	RJMP __CDF1U0
                 __CDF1:
000a0b 94e8      	CLT
                 __CDF1U0:
000a0c 9730      	SBIW R30,0
000a0d 4060      	SBCI R22,0
000a0e 4070      	SBCI R23,0
000a0f f0b1      	BREQ __CDF10
000a10 2400      	CLR  R0
000a11 f026      	BRTS __CDF11
000a12 2377      	TST  R23
000a13 f412      	BRPL __CDF11
000a14 9400      	COM  R0
000a15 d136      	RCALL __ANEGD1
                 __CDF11:
000a16 2e17      	MOV  R1,R23
000a17 e17e      	LDI  R23,30
000a18 2011      	TST  R1
                 __CDF12:
000a19 f032      	BRMI __CDF13
000a1a 957a      	DEC  R23
000a1b 0fee      	LSL  R30
000a1c 1fff      	ROL  R31
000a1d 1f66      	ROL  R22
000a1e 1c11      	ROL  R1
000a1f cff9      	RJMP __CDF12
                 __CDF13:
000a20 2fef      	MOV  R30,R31
000a21 2ff6      	MOV  R31,R22
000a22 2d61      	MOV  R22,R1
000a23 935f      	PUSH R21
000a24 df8a      	RCALL __REPACK
000a25 915f      	POP  R21
                 __CDF10:
000a26 9508      	RET
                 
                 __SWAPACC:
000a27 934f      	PUSH R20
000a28 01af      	MOVW R20,R30
000a29 01fd      	MOVW R30,R26
000a2a 01da      	MOVW R26,R20
000a2b 01ab      	MOVW R20,R22
000a2c 01bc      	MOVW R22,R24
000a2d 01ca      	MOVW R24,R20
000a2e 2d40      	MOV  R20,R0
000a2f 2c01      	MOV  R0,R1
000a30 2e14      	MOV  R1,R20
000a31 914f      	POP  R20
000a32 9508      	RET
                 
                 __UADD12:
000a33 0fea      	ADD  R30,R26
000a34 1ffb      	ADC  R31,R27
000a35 1f68      	ADC  R22,R24
000a36 9508      	RET
                 
                 __NEGMAN1:
000a37 95e0      	COM  R30
000a38 95f0      	COM  R31
000a39 9560      	COM  R22
000a3a 5fef      	SUBI R30,-1
000a3b 4fff      	SBCI R31,-1
000a3c 4f6f      	SBCI R22,-1
000a3d 9508      	RET
                 
                 __SUBF12:
000a3e 935f      	PUSH R21
000a3f df81      	RCALL __UNPACK
000a40 3890      	CPI  R25,0x80
000a41 f171      	BREQ __ADDF129
000a42 e850      	LDI  R21,0x80
000a43 2615      	EOR  R1,R21
                 
000a44 c004      	RJMP __ADDF120
                 
                 __ADDF12:
000a45 935f      	PUSH R21
000a46 df7a      	RCALL __UNPACK
000a47 3890      	CPI  R25,0x80
000a48 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000a49 3870      	CPI  R23,0x80
000a4a f121      	BREQ __ADDF128
                 __ADDF121:
000a4b 2f57      	MOV  R21,R23
000a4c 1b59      	SUB  R21,R25
000a4d f12b      	BRVS __ADDF1211
000a4e f412      	BRPL __ADDF122
000a4f dfd7      	RCALL __SWAPACC
000a50 cffa      	RJMP __ADDF121
                 __ADDF122:
000a51 3158      	CPI  R21,24
000a52 f018      	BRLO __ADDF123
000a53 27aa      	CLR  R26
000a54 27bb      	CLR  R27
000a55 2788      	CLR  R24
                 __ADDF123:
000a56 3058      	CPI  R21,8
000a57 f028      	BRLO __ADDF124
000a58 2fab      	MOV  R26,R27
000a59 2fb8      	MOV  R27,R24
000a5a 2788      	CLR  R24
000a5b 5058      	SUBI R21,8
000a5c cff9      	RJMP __ADDF123
                 __ADDF124:
000a5d 2355      	TST  R21
000a5e f029      	BREQ __ADDF126
                 __ADDF125:
000a5f 9586      	LSR  R24
000a60 95b7      	ROR  R27
000a61 95a7      	ROR  R26
000a62 955a      	DEC  R21
000a63 f7d9      	BRNE __ADDF125
                 __ADDF126:
000a64 2d50      	MOV  R21,R0
000a65 2551      	EOR  R21,R1
000a66 f072      	BRMI __ADDF127
000a67 dfcb      	RCALL __UADD12
000a68 f438      	BRCC __ADDF129
000a69 9567      	ROR  R22
000a6a 95f7      	ROR  R31
000a6b 95e7      	ROR  R30
000a6c 9573      	INC  R23
000a6d f413      	BRVC __ADDF129
000a6e c020      	RJMP __MAXRES
                 __ADDF128:
000a6f dfb7      	RCALL __SWAPACC
                 __ADDF129:
000a70 df3e      	RCALL __REPACK
000a71 915f      	POP  R21
000a72 9508      	RET
                 __ADDF1211:
000a73 f7d8      	BRCC __ADDF128
000a74 cffb      	RJMP __ADDF129
                 __ADDF127:
000a75 1bea      	SUB  R30,R26
000a76 0bfb      	SBC  R31,R27
000a77 0b68      	SBC  R22,R24
000a78 f051      	BREQ __ZERORES
000a79 f410      	BRCC __ADDF1210
000a7a 9400      	COM  R0
000a7b dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000a7c 2366      	TST  R22
000a7d f392      	BRMI __ADDF129
000a7e 0fee      	LSL  R30
000a7f 1fff      	ROL  R31
000a80 1f66      	ROL  R22
000a81 957a      	DEC  R23
000a82 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000a83 27ee      	CLR  R30
000a84 27ff      	CLR  R31
000a85 2766      	CLR  R22
000a86 2777      	CLR  R23
000a87 915f      	POP  R21
000a88 9508      	RET
                 
                 __MINRES:
000a89 efef      	SER  R30
000a8a efff      	SER  R31
000a8b e76f      	LDI  R22,0x7F
000a8c ef7f      	SER  R23
000a8d 915f      	POP  R21
000a8e 9508      	RET
                 
                 __MAXRES:
000a8f efef      	SER  R30
000a90 efff      	SER  R31
000a91 e76f      	LDI  R22,0x7F
000a92 e77f      	LDI  R23,0x7F
000a93 915f      	POP  R21
000a94 9508      	RET
                 
                 __MULF12:
000a95 935f      	PUSH R21
000a96 df2a      	RCALL __UNPACK
000a97 3870      	CPI  R23,0x80
000a98 f351      	BREQ __ZERORES
000a99 3890      	CPI  R25,0x80
000a9a f341      	BREQ __ZERORES
000a9b 2401      	EOR  R0,R1
000a9c 9408      	SEC
000a9d 1f79      	ADC  R23,R25
000a9e f423      	BRVC __MULF124
000a9f f31c      	BRLT __ZERORES
                 __MULF125:
000aa0 2000      	TST  R0
000aa1 f33a      	BRMI __MINRES
000aa2 cfec      	RJMP __MAXRES
                 __MULF124:
000aa3 920f      	PUSH R0
000aa4 931f      	PUSH R17
000aa5 932f      	PUSH R18
000aa6 933f      	PUSH R19
000aa7 934f      	PUSH R20
000aa8 2711      	CLR  R17
000aa9 2722      	CLR  R18
000aaa 2799      	CLR  R25
000aab 9f68      	MUL  R22,R24
000aac 01a0      	MOVW R20,R0
000aad 9f8f      	MUL  R24,R31
000aae 2d30      	MOV  R19,R0
000aaf 0d41      	ADD  R20,R1
000ab0 1f59      	ADC  R21,R25
000ab1 9f6b      	MUL  R22,R27
000ab2 0d30      	ADD  R19,R0
000ab3 1d41      	ADC  R20,R1
000ab4 1f59      	ADC  R21,R25
000ab5 9f8e      	MUL  R24,R30
000ab6 d027      	RCALL __MULF126
000ab7 9fbf      	MUL  R27,R31
000ab8 d025      	RCALL __MULF126
000ab9 9f6a      	MUL  R22,R26
000aba d023      	RCALL __MULF126
000abb 9fbe      	MUL  R27,R30
000abc d01d      	RCALL __MULF127
000abd 9faf      	MUL  R26,R31
000abe d01b      	RCALL __MULF127
000abf 9fae      	MUL  R26,R30
000ac0 0d11      	ADD  R17,R1
000ac1 1f29      	ADC  R18,R25
000ac2 1f39      	ADC  R19,R25
000ac3 1f49      	ADC  R20,R25
000ac4 1f59      	ADC  R21,R25
000ac5 2fe3      	MOV  R30,R19
000ac6 2ff4      	MOV  R31,R20
000ac7 2f65      	MOV  R22,R21
000ac8 2f52      	MOV  R21,R18
000ac9 914f      	POP  R20
000aca 913f      	POP  R19
000acb 912f      	POP  R18
000acc 911f      	POP  R17
000acd 900f      	POP  R0
000ace 2366      	TST  R22
000acf f02a      	BRMI __MULF122
000ad0 0f55      	LSL  R21
000ad1 1fee      	ROL  R30
000ad2 1fff      	ROL  R31
000ad3 1f66      	ROL  R22
000ad4 c002      	RJMP __MULF123
                 __MULF122:
000ad5 9573      	INC  R23
000ad6 f24b      	BRVS __MULF125
                 __MULF123:
000ad7 decd      	RCALL __ROUND_REPACK
000ad8 915f      	POP  R21
000ad9 9508      	RET
                 
                 __MULF127:
000ada 0d10      	ADD  R17,R0
000adb 1d21      	ADC  R18,R1
000adc 1f39      	ADC  R19,R25
000add c002      	RJMP __MULF128
                 __MULF126:
000ade 0d20      	ADD  R18,R0
000adf 1d31      	ADC  R19,R1
                 __MULF128:
000ae0 1f49      	ADC  R20,R25
000ae1 1f59      	ADC  R21,R25
000ae2 9508      	RET
                 
                 __DIVF21:
000ae3 935f      	PUSH R21
000ae4 dedc      	RCALL __UNPACK
000ae5 3870      	CPI  R23,0x80
000ae6 f421      	BRNE __DIVF210
000ae7 2011      	TST  R1
                 __DIVF211:
000ae8 f40a      	BRPL __DIVF219
000ae9 cf9f      	RJMP __MINRES
                 __DIVF219:
000aea cfa4      	RJMP __MAXRES
                 __DIVF210:
000aeb 3890      	CPI  R25,0x80
000aec f409      	BRNE __DIVF218
                 __DIVF217:
000aed cf95      	RJMP __ZERORES
                 __DIVF218:
000aee 2401      	EOR  R0,R1
000aef 9408      	SEC
000af0 0b97      	SBC  R25,R23
000af1 f41b      	BRVC __DIVF216
000af2 f3d4      	BRLT __DIVF217
000af3 2000      	TST  R0
000af4 cff3      	RJMP __DIVF211
                 __DIVF216:
000af5 2f79      	MOV  R23,R25
000af6 931f      	PUSH R17
000af7 932f      	PUSH R18
000af8 933f      	PUSH R19
000af9 934f      	PUSH R20
000afa 2411      	CLR  R1
000afb 2711      	CLR  R17
000afc 2722      	CLR  R18
000afd 2733      	CLR  R19
000afe 2744      	CLR  R20
000aff 2755      	CLR  R21
000b00 e290      	LDI  R25,32
                 __DIVF212:
000b01 17ae      	CP   R26,R30
000b02 07bf      	CPC  R27,R31
000b03 0786      	CPC  R24,R22
000b04 0741      	CPC  R20,R17
000b05 f030      	BRLO __DIVF213
000b06 1bae      	SUB  R26,R30
000b07 0bbf      	SBC  R27,R31
000b08 0b86      	SBC  R24,R22
000b09 0b41      	SBC  R20,R17
000b0a 9408      	SEC
000b0b c001      	RJMP __DIVF214
                 __DIVF213:
000b0c 9488      	CLC
                 __DIVF214:
000b0d 1f55      	ROL  R21
000b0e 1f22      	ROL  R18
000b0f 1f33      	ROL  R19
000b10 1c11      	ROL  R1
000b11 1faa      	ROL  R26
000b12 1fbb      	ROL  R27
000b13 1f88      	ROL  R24
000b14 1f44      	ROL  R20
000b15 959a      	DEC  R25
000b16 f751      	BRNE __DIVF212
000b17 01f9      	MOVW R30,R18
000b18 2d61      	MOV  R22,R1
000b19 914f      	POP  R20
000b1a 913f      	POP  R19
000b1b 912f      	POP  R18
000b1c 911f      	POP  R17
000b1d 2366      	TST  R22
000b1e f032      	BRMI __DIVF215
000b1f 0f55      	LSL  R21
000b20 1fee      	ROL  R30
000b21 1fff      	ROL  R31
000b22 1f66      	ROL  R22
000b23 957a      	DEC  R23
000b24 f243      	BRVS __DIVF217
                 __DIVF215:
000b25 de7f      	RCALL __ROUND_REPACK
000b26 915f      	POP  R21
000b27 9508      	RET
                 
                 __CMPF12:
000b28 2399      	TST  R25
000b29 f09a      	BRMI __CMPF120
000b2a 2377      	TST  R23
000b2b f042      	BRMI __CMPF121
000b2c 1797      	CP   R25,R23
000b2d f048      	BRLO __CMPF122
000b2e f429      	BRNE __CMPF121
000b2f 17ae      	CP   R26,R30
000b30 07bf      	CPC  R27,R31
000b31 0786      	CPC  R24,R22
000b32 f020      	BRLO __CMPF122
000b33 f031      	BREQ __CMPF123
                 __CMPF121:
000b34 9498      	CLZ
000b35 9488      	CLC
000b36 9508      	RET
                 __CMPF122:
000b37 9498      	CLZ
000b38 9408      	SEC
000b39 9508      	RET
                 __CMPF123:
000b3a 9418      	SEZ
000b3b 9488      	CLC
000b3c 9508      	RET
                 __CMPF120:
000b3d 2377      	TST  R23
000b3e f7c2      	BRPL __CMPF122
000b3f 1797      	CP   R25,R23
000b40 f398      	BRLO __CMPF121
000b41 f7a9      	BRNE __CMPF122
000b42 17ea      	CP   R30,R26
000b43 07fb      	CPC  R31,R27
000b44 0768      	CPC  R22,R24
000b45 f388      	BRLO __CMPF122
000b46 f399      	BREQ __CMPF123
000b47 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
000b48 2400      	CLR  R0
000b49 0daf      	ADD  R26,R15
000b4a 1db0      	ADC  R27,R0
000b4b 9508      	RET
                 
                 __ANEGD1:
000b4c 95f0      	COM  R31
000b4d 9560      	COM  R22
000b4e 9570      	COM  R23
000b4f 95e1      	NEG  R30
000b50 4fff      	SBCI R31,-1
000b51 4f6f      	SBCI R22,-1
000b52 4f7f      	SBCI R23,-1
000b53 9508      	RET
                 
                 __CBD1:
000b54 2ffe      	MOV  R31,R30
000b55 0fff      	ADD  R31,R31
000b56 0bff      	SBC  R31,R31
000b57 2f6f      	MOV  R22,R31
000b58 2f7f      	MOV  R23,R31
000b59 9508      	RET
                 
                 __CWD1:
000b5a 2f6f      	MOV  R22,R31
000b5b 0f66      	ADD  R22,R22
000b5c 0b66      	SBC  R22,R22
000b5d 2f76      	MOV  R23,R22
000b5e 9508      	RET
                 
                 __LNEGB1:
000b5f 23ee      	TST  R30
000b60 e0e1      	LDI  R30,1
000b61 f009      	BREQ __LNEGB1F
000b62 27ee      	CLR  R30
                 __LNEGB1F:
000b63 9508      	RET
                 
                 __DIVB21U:
000b64 2400      	CLR  R0
000b65 e098      	LDI  R25,8
                 __DIVB21U1:
000b66 0faa      	LSL  R26
000b67 1c00      	ROL  R0
000b68 1a0e      	SUB  R0,R30
000b69 f410      	BRCC __DIVB21U2
000b6a 0e0e      	ADD  R0,R30
000b6b c001      	RJMP __DIVB21U3
                 __DIVB21U2:
000b6c 60a1      	SBR  R26,1
                 __DIVB21U3:
000b6d 959a      	DEC  R25
000b6e f7b9      	BRNE __DIVB21U1
000b6f 2fea      	MOV  R30,R26
000b70 2da0      	MOV  R26,R0
000b71 9508      	RET
                 
                 __DIVB21:
000b72 d039      	RCALL __CHKSIGNB
000b73 dff0      	RCALL __DIVB21U
000b74 f40e      	BRTC __DIVB211
000b75 95e1      	NEG  R30
                 __DIVB211:
000b76 9508      	RET
                 
                 __DIVD21U:
000b77 933f      	PUSH R19
000b78 934f      	PUSH R20
000b79 935f      	PUSH R21
000b7a 2400      	CLR  R0
000b7b 2411      	CLR  R1
000b7c 2744      	CLR  R20
000b7d 2755      	CLR  R21
000b7e e230      	LDI  R19,32
                 __DIVD21U1:
000b7f 0faa      	LSL  R26
000b80 1fbb      	ROL  R27
000b81 1f88      	ROL  R24
000b82 1f99      	ROL  R25
000b83 1c00      	ROL  R0
000b84 1c11      	ROL  R1
000b85 1f44      	ROL  R20
000b86 1f55      	ROL  R21
000b87 1a0e      	SUB  R0,R30
000b88 0a1f      	SBC  R1,R31
000b89 0b46      	SBC  R20,R22
000b8a 0b57      	SBC  R21,R23
000b8b f428      	BRCC __DIVD21U2
000b8c 0e0e      	ADD  R0,R30
000b8d 1e1f      	ADC  R1,R31
000b8e 1f46      	ADC  R20,R22
000b8f 1f57      	ADC  R21,R23
000b90 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
000b91 60a1      	SBR  R26,1
                 __DIVD21U3:
000b92 953a      	DEC  R19
000b93 f759      	BRNE __DIVD21U1
000b94 01fd      	MOVW R30,R26
000b95 01bc      	MOVW R22,R24
000b96 01d0      	MOVW R26,R0
000b97 01ca      	MOVW R24,R20
000b98 915f      	POP  R21
000b99 914f      	POP  R20
000b9a 913f      	POP  R19
000b9b 9508      	RET
                 
                 __MODB21:
000b9c 94e8      	CLT
000b9d ffa7      	SBRS R26,7
000b9e c002      	RJMP __MODB211
000b9f 95a1      	NEG  R26
000ba0 9468      	SET
                 __MODB211:
000ba1 fde7      	SBRC R30,7
000ba2 95e1      	NEG  R30
000ba3 dfc0      	RCALL __DIVB21U
000ba4 2fea      	MOV  R30,R26
000ba5 f40e      	BRTC __MODB212
000ba6 95e1      	NEG  R30
                 __MODB212:
000ba7 9508      	RET
                 
                 __MODD21U:
000ba8 dfce      	RCALL __DIVD21U
000ba9 01fd      	MOVW R30,R26
000baa 01bc      	MOVW R22,R24
000bab 9508      	RET
                 
                 __CHKSIGNB:
000bac 94e8      	CLT
000bad ffe7      	SBRS R30,7
000bae c002      	RJMP __CHKSB1
000baf 95e1      	NEG  R30
000bb0 9468      	SET
                 __CHKSB1:
000bb1 ffa7      	SBRS R26,7
000bb2 c004      	RJMP __CHKSB2
000bb3 95a1      	NEG  R26
000bb4 f800      	BLD  R0,0
000bb5 9403      	INC  R0
000bb6 fa00      	BST  R0,0
                 __CHKSB2:
000bb7 9508      	RET
                 
                 __GETW1P:
000bb8 91ed      	LD   R30,X+
000bb9 91fc      	LD   R31,X
000bba 9711      	SBIW R26,1
000bbb 9508      	RET
                 
                 __GETD1P:
000bbc 91ed      	LD   R30,X+
000bbd 91fd      	LD   R31,X+
000bbe 916d      	LD   R22,X+
000bbf 917c      	LD   R23,X
000bc0 9713      	SBIW R26,3
000bc1 9508      	RET
                 
                 __PUTDP1:
000bc2 93ed      	ST   X+,R30
000bc3 93fd      	ST   X+,R31
000bc4 936d      	ST   X+,R22
000bc5 937c      	ST   X,R23
000bc6 9508      	RET
                 
                 __GETW1PF:
000bc7 9005      	LPM  R0,Z+
000bc8 91f4      	LPM  R31,Z
000bc9 2de0      	MOV  R30,R0
000bca 9508      	RET
                 
                 __GETW2PF:
000bcb 91a5      	LPM  R26,Z+
000bcc 91b4      	LPM  R27,Z
000bcd 9508      	RET
                 
                 __GETD1S0:
000bce 81e8      	LD   R30,Y
000bcf 81f9      	LDD  R31,Y+1
000bd0 816a      	LDD  R22,Y+2
000bd1 817b      	LDD  R23,Y+3
000bd2 9508      	RET
                 
                 __GETD2S0:
000bd3 81a8      	LD   R26,Y
000bd4 81b9      	LDD  R27,Y+1
000bd5 818a      	LDD  R24,Y+2
000bd6 819b      	LDD  R25,Y+3
000bd7 9508      	RET
                 
                 __PUTD1S0:
000bd8 83e8      	ST   Y,R30
000bd9 83f9      	STD  Y+1,R31
000bda 836a      	STD  Y+2,R22
000bdb 837b      	STD  Y+3,R23
000bdc 9508      	RET
                 
                 __PUTPARD1:
000bdd 937a      	ST   -Y,R23
000bde 936a      	ST   -Y,R22
000bdf 93fa      	ST   -Y,R31
000be0 93ea      	ST   -Y,R30
000be1 9508      	RET
                 
                 __PUTPARD2:
000be2 939a      	ST   -Y,R25
000be3 938a      	ST   -Y,R24
000be4 93ba      	ST   -Y,R27
000be5 93aa      	ST   -Y,R26
000be6 9508      	RET
                 
                 __SWAPD12:
000be7 2e18      	MOV  R1,R24
000be8 2f86      	MOV  R24,R22
000be9 2d61      	MOV  R22,R1
000bea 2e19      	MOV  R1,R25
000beb 2f97      	MOV  R25,R23
000bec 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000bed 2e1b      	MOV  R1,R27
000bee 2fbf      	MOV  R27,R31
000bef 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000bf0 2e1a      	MOV  R1,R26
000bf1 2fae      	MOV  R26,R30
000bf2 2de1      	MOV  R30,R1
000bf3 9508      	RET
                 
                 __CPD10:
000bf4 9730      	SBIW R30,0
000bf5 4060      	SBCI R22,0
000bf6 4070      	SBCI R23,0
000bf7 9508      	RET
                 
                 __CPD02:
000bf8 2400      	CLR  R0
000bf9 160a      	CP   R0,R26
000bfa 060b      	CPC  R0,R27
000bfb 0608      	CPC  R0,R24
000bfc 0609      	CPC  R0,R25
000bfd 9508      	RET
                 
                 __CPD12:
000bfe 17ea      	CP   R30,R26
000bff 07fb      	CPC  R31,R27
000c00 0768      	CPC  R22,R24
000c01 0779      	CPC  R23,R25
000c02 9508      	RET
                 
                 __SAVELOCR6:
000c03 935a      	ST   -Y,R21
                 __SAVELOCR5:
000c04 934a      	ST   -Y,R20
                 __SAVELOCR4:
000c05 933a      	ST   -Y,R19
                 __SAVELOCR3:
000c06 932a      	ST   -Y,R18
                 __SAVELOCR2:
000c07 931a      	ST   -Y,R17
000c08 930a      	ST   -Y,R16
000c09 9508      	RET
                 
                 __LOADLOCR6:
000c0a 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000c0b 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000c0c 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000c0d 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000c0e 8119      	LDD  R17,Y+1
000c0f 8108      	LD   R16,Y
000c10 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega8A register use summary:
r0 :  69 r1 :  36 r2 :  10 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   6 
r16:  58 r17:  73 r18:  66 r19:  43 r20:  54 r21:  90 r22: 142 r23: 137 
r24: 110 r25:  83 r26: 235 r27: 120 r28:  38 r29:   1 r30: 529 r31: 172 
x  :  50 y  : 370 z  :  26 
Registers used: 23 out of 35 (65.7%)

ATmega8A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  25 add   :  18 
adiw  :  34 and   :   7 andi  :  25 asr   :   0 bclr  :   0 bld   :  10 
brbc  :   0 brbs  :   0 brcc  :  10 brcs  :   1 break :   0 breq  :  59 
brge  :   2 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  29 
brlt  :   3 brmi  :  10 brne  : 106 brpl  :   9 brsh  :  13 brtc  :   5 
brts  :   3 brvc  :   4 brvs  :   4 bset  :   0 bst   :   5 cbi   :   5 
cbr   :   1 clc   :   4 clh   :   0 cli   :   1 cln   :   0 clr   :  53 
cls   :   0 clt   :   9 clv   :   0 clz   :   2 com   :   8 cp    :  25 
cpc   :  23 cpi   : 113 cpse  :   0 dec   :  25 des   :   0 eor   :   9 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   7 ijmp  :   0 in    :  22 
inc   :   4 ld    :  73 ldd   : 184 ldi   : 328 lds   :  43 lpm   :  18 
lsl   :  18 lsr   :   7 mov   :  86 movw  :  48 mul   :  11 muls  :   0 
mulsu :   0 neg   :   9 nop   :   0 or    :   0 ori   :  24 out   :  32 
pop   :  42 push  :  42 rcall : 429 ret   : 138 reti  :   1 rjmp  : 217 
rol   :  35 ror   :  21 sbc   :  12 sbci  :  21 sbi   :   3 sbic  :   3 
sbis  :   4 sbiw  :  32 sbr   :   4 sbrc  :   5 sbrs  :  25 sec   :   6 
seh   :   0 sei   :   0 sen   :   0 ser   :   8 ses   :   0 set   :   9 
sev   :   0 sez   :   1 sleep :   0 spm   :   0 st    :  82 std   :  92 
sts   :   9 sub   :   6 subi  :  54 swap  :   2 tst   :  25 wdr   :   1 

Instructions used: 79 out of 114 (69.3%)

ATmega8A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001822   5904    274   6178    8192  75.4%
[.dseg] 0x000060 0x000219      0    185    185    1024  18.1%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 8 warnings
